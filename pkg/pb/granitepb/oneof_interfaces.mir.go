// Code generated by Mir codegen. DO NOT EDIT.

package granitepb

type Message_Type = isMessage_Type

type Message_TypeWrapper[T any] interface {
	Message_Type
	Unwrap() *T
}

func (w *Message_Converge) Unwrap() *Converge {
	return w.Converge
}

func (w *Message_Propose) Unwrap() *Propose {
	return w.Propose
}

func (w *Message_Prepare) Unwrap() *Prepare {
	return w.Prepare
}

func (w *Message_Commit) Unwrap() *Commit {
	return w.Commit
}

func (w *Message_Decision) Unwrap() *Decision {
	return w.Decision
}

func (w *Message_ConsensusMsg) Unwrap() *ConsensusMsg {
	return w.ConsensusMsg
}
