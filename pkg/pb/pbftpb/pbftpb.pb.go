// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: pbftpb/pbftpb.proto

package pbftpb

import (
	_ "github.com/filecoin-project/mir/pkg/pb/mir"
	_ "github.com/filecoin-project/mir/pkg/pb/net"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Message_Preprepare
	//	*Message_Prepare
	//	*Message_Commit
	//	*Message_Done
	//	*Message_CatchUpRequest
	//	*Message_CatchUpResponse
	//	*Message_SignedViewChange
	//	*Message_PreprepareRequest
	//	*Message_MissingPreprepare
	//	*Message_NewView
	Type isMessage_Type `protobuf_oneof:"type"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{0}
}

func (m *Message) GetType() isMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Message) GetPreprepare() *Preprepare {
	if x, ok := x.GetType().(*Message_Preprepare); ok {
		return x.Preprepare
	}
	return nil
}

func (x *Message) GetPrepare() *Prepare {
	if x, ok := x.GetType().(*Message_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (x *Message) GetCommit() *Commit {
	if x, ok := x.GetType().(*Message_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *Message) GetDone() *Done {
	if x, ok := x.GetType().(*Message_Done); ok {
		return x.Done
	}
	return nil
}

func (x *Message) GetCatchUpRequest() *CatchUpRequest {
	if x, ok := x.GetType().(*Message_CatchUpRequest); ok {
		return x.CatchUpRequest
	}
	return nil
}

func (x *Message) GetCatchUpResponse() *CatchUpResponse {
	if x, ok := x.GetType().(*Message_CatchUpResponse); ok {
		return x.CatchUpResponse
	}
	return nil
}

func (x *Message) GetSignedViewChange() *SignedViewChange {
	if x, ok := x.GetType().(*Message_SignedViewChange); ok {
		return x.SignedViewChange
	}
	return nil
}

func (x *Message) GetPreprepareRequest() *PreprepareRequest {
	if x, ok := x.GetType().(*Message_PreprepareRequest); ok {
		return x.PreprepareRequest
	}
	return nil
}

func (x *Message) GetMissingPreprepare() *MissingPreprepare {
	if x, ok := x.GetType().(*Message_MissingPreprepare); ok {
		return x.MissingPreprepare
	}
	return nil
}

func (x *Message) GetNewView() *NewView {
	if x, ok := x.GetType().(*Message_NewView); ok {
		return x.NewView
	}
	return nil
}

type isMessage_Type interface {
	isMessage_Type()
}

type Message_Preprepare struct {
	// PBFT good case messages
	Preprepare *Preprepare `protobuf:"bytes,1,opt,name=preprepare,proto3,oneof"`
}

type Message_Prepare struct {
	Prepare *Prepare `protobuf:"bytes,2,opt,name=prepare,proto3,oneof"`
}

type Message_Commit struct {
	Commit *Commit `protobuf:"bytes,3,opt,name=commit,proto3,oneof"`
}

type Message_Done struct {
	// Segment-level checkpoint messages
	Done *Done `protobuf:"bytes,4,opt,name=done,proto3,oneof"`
}

type Message_CatchUpRequest struct {
	CatchUpRequest *CatchUpRequest `protobuf:"bytes,5,opt,name=catch_up_request,json=catchUpRequest,proto3,oneof"`
}

type Message_CatchUpResponse struct {
	CatchUpResponse *CatchUpResponse `protobuf:"bytes,6,opt,name=catch_up_response,json=catchUpResponse,proto3,oneof"`
}

type Message_SignedViewChange struct {
	// View change messages
	SignedViewChange *SignedViewChange `protobuf:"bytes,7,opt,name=signed_view_change,json=signedViewChange,proto3,oneof"`
}

type Message_PreprepareRequest struct {
	PreprepareRequest *PreprepareRequest `protobuf:"bytes,8,opt,name=preprepare_request,json=preprepareRequest,proto3,oneof"`
}

type Message_MissingPreprepare struct {
	MissingPreprepare *MissingPreprepare `protobuf:"bytes,9,opt,name=missing_preprepare,json=missingPreprepare,proto3,oneof"`
}

type Message_NewView struct {
	NewView *NewView `protobuf:"bytes,10,opt,name=new_view,json=newView,proto3,oneof"`
}

func (*Message_Preprepare) isMessage_Type() {}

func (*Message_Prepare) isMessage_Type() {}

func (*Message_Commit) isMessage_Type() {}

func (*Message_Done) isMessage_Type() {}

func (*Message_CatchUpRequest) isMessage_Type() {}

func (*Message_CatchUpResponse) isMessage_Type() {}

func (*Message_SignedViewChange) isMessage_Type() {}

func (*Message_PreprepareRequest) isMessage_Type() {}

func (*Message_MissingPreprepare) isMessage_Type() {}

func (*Message_NewView) isMessage_Type() {}

type Preprepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn      uint64 `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	View    uint64 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Aborted bool   `protobuf:"varint,4,opt,name=aborted,proto3" json:"aborted,omitempty"`
}

func (x *Preprepare) Reset() {
	*x = Preprepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Preprepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Preprepare) ProtoMessage() {}

func (x *Preprepare) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Preprepare.ProtoReflect.Descriptor instead.
func (*Preprepare) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{1}
}

func (x *Preprepare) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *Preprepare) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *Preprepare) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Preprepare) GetAborted() bool {
	if x != nil {
		return x.Aborted
	}
	return false
}

type Prepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn     uint64 `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	View   uint64 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Digest []byte `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *Prepare) Reset() {
	*x = Prepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prepare) ProtoMessage() {}

func (x *Prepare) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prepare.ProtoReflect.Descriptor instead.
func (*Prepare) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{2}
}

func (x *Prepare) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *Prepare) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *Prepare) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type Commit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn     uint64 `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	View   uint64 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Digest []byte `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *Commit) Reset() {
	*x = Commit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{3}
}

func (x *Commit) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *Commit) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *Commit) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type Done struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digests [][]byte `protobuf:"bytes,1,rep,name=digests,proto3" json:"digests,omitempty"`
}

func (x *Done) Reset() {
	*x = Done{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Done) ProtoMessage() {}

func (x *Done) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Done.ProtoReflect.Descriptor instead.
func (*Done) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{4}
}

func (x *Done) GetDigests() [][]byte {
	if x != nil {
		return x.Digests
	}
	return nil
}

type CatchUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest []byte `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	Sn     uint64 `protobuf:"varint,2,opt,name=sn,proto3" json:"sn,omitempty"`
}

func (x *CatchUpRequest) Reset() {
	*x = CatchUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchUpRequest) ProtoMessage() {}

func (x *CatchUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchUpRequest.ProtoReflect.Descriptor instead.
func (*CatchUpRequest) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{5}
}

func (x *CatchUpRequest) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *CatchUpRequest) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

type CatchUpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Preprepare `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *CatchUpResponse) Reset() {
	*x = CatchUpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchUpResponse) ProtoMessage() {}

func (x *CatchUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchUpResponse.ProtoReflect.Descriptor instead.
func (*CatchUpResponse) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{6}
}

func (x *CatchUpResponse) GetResp() *Preprepare {
	if x != nil {
		return x.Resp
	}
	return nil
}

type SignedViewChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ViewChange *ViewChange `protobuf:"bytes,1,opt,name=view_change,json=viewChange,proto3" json:"view_change,omitempty"`
	Signature  []byte      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignedViewChange) Reset() {
	*x = SignedViewChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedViewChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedViewChange) ProtoMessage() {}

func (x *SignedViewChange) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedViewChange.ProtoReflect.Descriptor instead.
func (*SignedViewChange) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{7}
}

func (x *SignedViewChange) GetViewChange() *ViewChange {
	if x != nil {
		return x.ViewChange
	}
	return nil
}

func (x *SignedViewChange) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type PreprepareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest []byte `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	Sn     uint64 `protobuf:"varint,2,opt,name=sn,proto3" json:"sn,omitempty"`
}

func (x *PreprepareRequest) Reset() {
	*x = PreprepareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreprepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreprepareRequest) ProtoMessage() {}

func (x *PreprepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreprepareRequest.ProtoReflect.Descriptor instead.
func (*PreprepareRequest) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{8}
}

func (x *PreprepareRequest) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *PreprepareRequest) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

type MissingPreprepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preprepare *Preprepare `protobuf:"bytes,1,opt,name=preprepare,proto3" json:"preprepare,omitempty"`
}

func (x *MissingPreprepare) Reset() {
	*x = MissingPreprepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissingPreprepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissingPreprepare) ProtoMessage() {}

func (x *MissingPreprepare) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissingPreprepare.ProtoReflect.Descriptor instead.
func (*MissingPreprepare) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{9}
}

func (x *MissingPreprepare) GetPreprepare() *Preprepare {
	if x != nil {
		return x.Preprepare
	}
	return nil
}

type NewView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View              uint64              `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	ViewChangeSenders []string            `protobuf:"bytes,3,rep,name=view_change_senders,json=viewChangeSenders,proto3" json:"view_change_senders,omitempty"`
	SignedViewChanges []*SignedViewChange `protobuf:"bytes,2,rep,name=signed_view_changes,json=signedViewChanges,proto3" json:"signed_view_changes,omitempty"`
	PreprepareSeqNrs  []uint64            `protobuf:"varint,4,rep,packed,name=preprepare_seq_nrs,json=preprepareSeqNrs,proto3" json:"preprepare_seq_nrs,omitempty"`
	Preprepares       []*Preprepare       `protobuf:"bytes,5,rep,name=preprepares,proto3" json:"preprepares,omitempty"`
}

func (x *NewView) Reset() {
	*x = NewView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewView) ProtoMessage() {}

func (x *NewView) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewView.ProtoReflect.Descriptor instead.
func (*NewView) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{10}
}

func (x *NewView) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *NewView) GetViewChangeSenders() []string {
	if x != nil {
		return x.ViewChangeSenders
	}
	return nil
}

func (x *NewView) GetSignedViewChanges() []*SignedViewChange {
	if x != nil {
		return x.SignedViewChanges
	}
	return nil
}

func (x *NewView) GetPreprepareSeqNrs() []uint64 {
	if x != nil {
		return x.PreprepareSeqNrs
	}
	return nil
}

func (x *NewView) GetPreprepares() []*Preprepare {
	if x != nil {
		return x.Preprepares
	}
	return nil
}

type ViewChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View uint64       `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	PSet []*PSetEntry `protobuf:"bytes,2,rep,name=p_set,json=pSet,proto3" json:"p_set,omitempty"`
	QSet []*QSetEntry `protobuf:"bytes,3,rep,name=q_set,json=qSet,proto3" json:"q_set,omitempty"`
}

func (x *ViewChange) Reset() {
	*x = ViewChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewChange) ProtoMessage() {}

func (x *ViewChange) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewChange.ProtoReflect.Descriptor instead.
func (*ViewChange) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{11}
}

func (x *ViewChange) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *ViewChange) GetPSet() []*PSetEntry {
	if x != nil {
		return x.PSet
	}
	return nil
}

func (x *ViewChange) GetQSet() []*QSetEntry {
	if x != nil {
		return x.QSet
	}
	return nil
}

type PSetEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn     uint64 `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	View   uint64 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Digest []byte `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *PSetEntry) Reset() {
	*x = PSetEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PSetEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PSetEntry) ProtoMessage() {}

func (x *PSetEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PSetEntry.ProtoReflect.Descriptor instead.
func (*PSetEntry) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{12}
}

func (x *PSetEntry) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *PSetEntry) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PSetEntry) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type QSetEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn     uint64 `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	View   uint64 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Digest []byte `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *QSetEntry) Reset() {
	*x = QSetEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QSetEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QSetEntry) ProtoMessage() {}

func (x *QSetEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QSetEntry.ProtoReflect.Descriptor instead.
func (*QSetEntry) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{13}
}

func (x *QSetEntry) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *QSetEntry) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *QSetEntry) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Event_ProposeTimeout
	//	*Event_ViewChangeSnTimeout
	//	*Event_ViewChangeSegTimeout
	Type isEvent_Type `protobuf_oneof:"type"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{14}
}

func (m *Event) GetType() isEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Event) GetProposeTimeout() uint64 {
	if x, ok := x.GetType().(*Event_ProposeTimeout); ok {
		return x.ProposeTimeout
	}
	return 0
}

func (x *Event) GetViewChangeSnTimeout() *VCSNTimeout {
	if x, ok := x.GetType().(*Event_ViewChangeSnTimeout); ok {
		return x.ViewChangeSnTimeout
	}
	return nil
}

func (x *Event) GetViewChangeSegTimeout() uint64 {
	if x, ok := x.GetType().(*Event_ViewChangeSegTimeout); ok {
		return x.ViewChangeSegTimeout
	}
	return 0
}

type isEvent_Type interface {
	isEvent_Type()
}

type Event_ProposeTimeout struct {
	ProposeTimeout uint64 `protobuf:"varint,1,opt,name=propose_timeout,json=proposeTimeout,proto3,oneof"`
}

type Event_ViewChangeSnTimeout struct {
	ViewChangeSnTimeout *VCSNTimeout `protobuf:"bytes,2,opt,name=view_change_sn_timeout,json=viewChangeSnTimeout,proto3,oneof"`
}

type Event_ViewChangeSegTimeout struct {
	ViewChangeSegTimeout uint64 `protobuf:"varint,3,opt,name=view_change_seg_timeout,json=viewChangeSegTimeout,proto3,oneof"`
}

func (*Event_ProposeTimeout) isEvent_Type() {}

func (*Event_ViewChangeSnTimeout) isEvent_Type() {}

func (*Event_ViewChangeSegTimeout) isEvent_Type() {}

type VCSNTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View         uint64 `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	NumCommitted uint64 `protobuf:"varint,2,opt,name=numCommitted,proto3" json:"numCommitted,omitempty"`
}

func (x *VCSNTimeout) Reset() {
	*x = VCSNTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCSNTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCSNTimeout) ProtoMessage() {}

func (x *VCSNTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCSNTimeout.ProtoReflect.Descriptor instead.
func (*VCSNTimeout) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{15}
}

func (x *VCSNTimeout) GetView() uint64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *VCSNTimeout) GetNumCommitted() uint64 {
	if x != nil {
		return x.NumCommitted
	}
	return 0
}

type HashOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*HashOrigin_Preprepare
	//	*HashOrigin_MissingPreprepare
	//	*HashOrigin_NewView
	//	*HashOrigin_EmptyPreprepares
	//	*HashOrigin_CatchUpResponse
	Type isHashOrigin_Type `protobuf_oneof:"type"`
}

func (x *HashOrigin) Reset() {
	*x = HashOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashOrigin) ProtoMessage() {}

func (x *HashOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashOrigin.ProtoReflect.Descriptor instead.
func (*HashOrigin) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{16}
}

func (m *HashOrigin) GetType() isHashOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *HashOrigin) GetPreprepare() *Preprepare {
	if x, ok := x.GetType().(*HashOrigin_Preprepare); ok {
		return x.Preprepare
	}
	return nil
}

func (x *HashOrigin) GetMissingPreprepare() *Preprepare {
	if x, ok := x.GetType().(*HashOrigin_MissingPreprepare); ok {
		return x.MissingPreprepare
	}
	return nil
}

func (x *HashOrigin) GetNewView() *NewView {
	if x, ok := x.GetType().(*HashOrigin_NewView); ok {
		return x.NewView
	}
	return nil
}

func (x *HashOrigin) GetEmptyPreprepares() uint64 {
	if x, ok := x.GetType().(*HashOrigin_EmptyPreprepares); ok {
		return x.EmptyPreprepares
	}
	return 0
}

func (x *HashOrigin) GetCatchUpResponse() *Preprepare {
	if x, ok := x.GetType().(*HashOrigin_CatchUpResponse); ok {
		return x.CatchUpResponse
	}
	return nil
}

type isHashOrigin_Type interface {
	isHashOrigin_Type()
}

type HashOrigin_Preprepare struct {
	Preprepare *Preprepare `protobuf:"bytes,1,opt,name=preprepare,proto3,oneof"`
}

type HashOrigin_MissingPreprepare struct {
	MissingPreprepare *Preprepare `protobuf:"bytes,2,opt,name=missing_preprepare,json=missingPreprepare,proto3,oneof"`
}

type HashOrigin_NewView struct {
	NewView *NewView `protobuf:"bytes,3,opt,name=new_view,json=newView,proto3,oneof"`
}

type HashOrigin_EmptyPreprepares struct {
	EmptyPreprepares uint64 `protobuf:"varint,4,opt,name=empty_preprepares,json=emptyPreprepares,proto3,oneof"`
}

type HashOrigin_CatchUpResponse struct {
	CatchUpResponse *Preprepare `protobuf:"bytes,5,opt,name=catch_up_response,json=catchUpResponse,proto3,oneof"`
}

func (*HashOrigin_Preprepare) isHashOrigin_Type() {}

func (*HashOrigin_MissingPreprepare) isHashOrigin_Type() {}

func (*HashOrigin_NewView) isHashOrigin_Type() {}

func (*HashOrigin_EmptyPreprepares) isHashOrigin_Type() {}

func (*HashOrigin_CatchUpResponse) isHashOrigin_Type() {}

type SignOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*SignOrigin_ViewChange
	Type isSignOrigin_Type `protobuf_oneof:"type"`
}

func (x *SignOrigin) Reset() {
	*x = SignOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOrigin) ProtoMessage() {}

func (x *SignOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOrigin.ProtoReflect.Descriptor instead.
func (*SignOrigin) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{17}
}

func (m *SignOrigin) GetType() isSignOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SignOrigin) GetViewChange() *ViewChange {
	if x, ok := x.GetType().(*SignOrigin_ViewChange); ok {
		return x.ViewChange
	}
	return nil
}

type isSignOrigin_Type interface {
	isSignOrigin_Type()
}

type SignOrigin_ViewChange struct {
	ViewChange *ViewChange `protobuf:"bytes,1,opt,name=view_change,json=viewChange,proto3,oneof"`
}

func (*SignOrigin_ViewChange) isSignOrigin_Type() {}

type SigVerOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*SigVerOrigin_SignedViewChange
	//	*SigVerOrigin_NewView
	Type isSigVerOrigin_Type `protobuf_oneof:"type"`
}

func (x *SigVerOrigin) Reset() {
	*x = SigVerOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbftpb_pbftpb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigVerOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigVerOrigin) ProtoMessage() {}

func (x *SigVerOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_pbftpb_pbftpb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigVerOrigin.ProtoReflect.Descriptor instead.
func (*SigVerOrigin) Descriptor() ([]byte, []int) {
	return file_pbftpb_pbftpb_proto_rawDescGZIP(), []int{18}
}

func (m *SigVerOrigin) GetType() isSigVerOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SigVerOrigin) GetSignedViewChange() *SignedViewChange {
	if x, ok := x.GetType().(*SigVerOrigin_SignedViewChange); ok {
		return x.SignedViewChange
	}
	return nil
}

func (x *SigVerOrigin) GetNewView() *NewView {
	if x, ok := x.GetType().(*SigVerOrigin_NewView); ok {
		return x.NewView
	}
	return nil
}

type isSigVerOrigin_Type interface {
	isSigVerOrigin_Type()
}

type SigVerOrigin_SignedViewChange struct {
	SignedViewChange *SignedViewChange `protobuf:"bytes,1,opt,name=signed_view_change,json=signedViewChange,proto3,oneof"`
}

type SigVerOrigin_NewView struct {
	NewView *NewView `protobuf:"bytes,2,opt,name=new_view,json=newView,proto3,oneof"`
}

func (*SigVerOrigin_SignedViewChange) isSigVerOrigin_Type() {}

func (*SigVerOrigin_NewView) isSigVerOrigin_Type() {}

var File_pbftpb_pbftpb_proto protoreflect.FileDescriptor

var file_pbftpb_pbftpb_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x1a, 0x1c, 0x6d,
	0x69, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6e, 0x65, 0x74,
	0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe9, 0x04, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x66, 0x74,
	0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x63, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x63, 0x68, 0x55,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x61, 0x74, 0x63,
	0x68, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x63, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x43,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x63, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x69, 0x65,
	0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x70,
	0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00,
	0x52, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x56, 0x69, 0x65,
	0x77, 0x3a, 0x04, 0xc8, 0xe4, 0x1d, 0x01, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x04, 0xc8, 0xe4, 0x1d, 0x01, 0x22, 0x64, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x62,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x4b, 0x0a, 0x07, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x4a, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x3a, 0x04,
	0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x26, 0x0a, 0x04, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x3e, 0x0a, 0x0e,
	0x43, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x73, 0x6e, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x3f, 0x0a, 0x0f,
	0x43, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x6b, 0x0a,
	0x10, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x33, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x41, 0x0a, 0x11, 0x50, 0x72,
	0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x73, 0x6e, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x4d, 0x0a,
	0x11, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e,
	0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01, 0x22, 0x81, 0x02, 0x0a,
	0x07, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x13,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a, 0x13,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x66, 0x74,
	0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x10, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x65,
	0x71, 0x4e, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x66, 0x74,
	0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x0b, 0x70,
	0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x73, 0x3a, 0x04, 0xd0, 0xe4, 0x1d, 0x01,
	0x22, 0x76, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x53, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x70, 0x53, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x71, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x66, 0x74,
	0x70, 0x62, 0x2e, 0x51, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x71, 0x53,
	0x65, 0x74, 0x3a, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x22, 0x4d, 0x0a, 0x09, 0x50, 0x53, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x3a, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x22, 0x4d, 0x0a, 0x09, 0x51, 0x53, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x73, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x3a, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x22, 0xcb, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x4a, 0x0a, 0x16, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62,
	0x66, 0x74, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x53, 0x4e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x48, 0x00, 0x52, 0x13, 0x76, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x17, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x14, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x3a, 0x04, 0x90, 0xa6, 0x1d, 0x01, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x04,
	0x80, 0xa6, 0x1d, 0x01, 0x22, 0x4b, 0x0a, 0x0b, 0x56, 0x43, 0x53, 0x4e, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6e,
	0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x3a, 0x04, 0x98, 0xa6, 0x1d,
	0x01, 0x22, 0xb4, 0x02, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6e,
	0x65, 0x77, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x48, 0x00,
	0x52, 0x07, 0x6e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2d, 0x0a, 0x11, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x72, 0x65,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x04, 0x80, 0xa6, 0x1d, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x66, 0x74, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x48, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x10,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x2c, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x56,
	0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62,
	0x2f, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pbftpb_pbftpb_proto_rawDescOnce sync.Once
	file_pbftpb_pbftpb_proto_rawDescData = file_pbftpb_pbftpb_proto_rawDesc
)

func file_pbftpb_pbftpb_proto_rawDescGZIP() []byte {
	file_pbftpb_pbftpb_proto_rawDescOnce.Do(func() {
		file_pbftpb_pbftpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_pbftpb_pbftpb_proto_rawDescData)
	})
	return file_pbftpb_pbftpb_proto_rawDescData
}

var file_pbftpb_pbftpb_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_pbftpb_pbftpb_proto_goTypes = []interface{}{
	(*Message)(nil),           // 0: pbftpb.Message
	(*Preprepare)(nil),        // 1: pbftpb.Preprepare
	(*Prepare)(nil),           // 2: pbftpb.Prepare
	(*Commit)(nil),            // 3: pbftpb.Commit
	(*Done)(nil),              // 4: pbftpb.Done
	(*CatchUpRequest)(nil),    // 5: pbftpb.CatchUpRequest
	(*CatchUpResponse)(nil),   // 6: pbftpb.CatchUpResponse
	(*SignedViewChange)(nil),  // 7: pbftpb.SignedViewChange
	(*PreprepareRequest)(nil), // 8: pbftpb.PreprepareRequest
	(*MissingPreprepare)(nil), // 9: pbftpb.MissingPreprepare
	(*NewView)(nil),           // 10: pbftpb.NewView
	(*ViewChange)(nil),        // 11: pbftpb.ViewChange
	(*PSetEntry)(nil),         // 12: pbftpb.PSetEntry
	(*QSetEntry)(nil),         // 13: pbftpb.QSetEntry
	(*Event)(nil),             // 14: pbftpb.Event
	(*VCSNTimeout)(nil),       // 15: pbftpb.VCSNTimeout
	(*HashOrigin)(nil),        // 16: pbftpb.HashOrigin
	(*SignOrigin)(nil),        // 17: pbftpb.SignOrigin
	(*SigVerOrigin)(nil),      // 18: pbftpb.SigVerOrigin
}
var file_pbftpb_pbftpb_proto_depIdxs = []int32{
	1,  // 0: pbftpb.Message.preprepare:type_name -> pbftpb.Preprepare
	2,  // 1: pbftpb.Message.prepare:type_name -> pbftpb.Prepare
	3,  // 2: pbftpb.Message.commit:type_name -> pbftpb.Commit
	4,  // 3: pbftpb.Message.done:type_name -> pbftpb.Done
	5,  // 4: pbftpb.Message.catch_up_request:type_name -> pbftpb.CatchUpRequest
	6,  // 5: pbftpb.Message.catch_up_response:type_name -> pbftpb.CatchUpResponse
	7,  // 6: pbftpb.Message.signed_view_change:type_name -> pbftpb.SignedViewChange
	8,  // 7: pbftpb.Message.preprepare_request:type_name -> pbftpb.PreprepareRequest
	9,  // 8: pbftpb.Message.missing_preprepare:type_name -> pbftpb.MissingPreprepare
	10, // 9: pbftpb.Message.new_view:type_name -> pbftpb.NewView
	1,  // 10: pbftpb.CatchUpResponse.resp:type_name -> pbftpb.Preprepare
	11, // 11: pbftpb.SignedViewChange.view_change:type_name -> pbftpb.ViewChange
	1,  // 12: pbftpb.MissingPreprepare.preprepare:type_name -> pbftpb.Preprepare
	7,  // 13: pbftpb.NewView.signed_view_changes:type_name -> pbftpb.SignedViewChange
	1,  // 14: pbftpb.NewView.preprepares:type_name -> pbftpb.Preprepare
	12, // 15: pbftpb.ViewChange.p_set:type_name -> pbftpb.PSetEntry
	13, // 16: pbftpb.ViewChange.q_set:type_name -> pbftpb.QSetEntry
	15, // 17: pbftpb.Event.view_change_sn_timeout:type_name -> pbftpb.VCSNTimeout
	1,  // 18: pbftpb.HashOrigin.preprepare:type_name -> pbftpb.Preprepare
	1,  // 19: pbftpb.HashOrigin.missing_preprepare:type_name -> pbftpb.Preprepare
	10, // 20: pbftpb.HashOrigin.new_view:type_name -> pbftpb.NewView
	1,  // 21: pbftpb.HashOrigin.catch_up_response:type_name -> pbftpb.Preprepare
	11, // 22: pbftpb.SignOrigin.view_change:type_name -> pbftpb.ViewChange
	7,  // 23: pbftpb.SigVerOrigin.signed_view_change:type_name -> pbftpb.SignedViewChange
	10, // 24: pbftpb.SigVerOrigin.new_view:type_name -> pbftpb.NewView
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_pbftpb_pbftpb_proto_init() }
func file_pbftpb_pbftpb_proto_init() {
	if File_pbftpb_pbftpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pbftpb_pbftpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Preprepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Commit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Done); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatchUpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedViewChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreprepareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissingPreprepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PSetEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QSetEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCSNTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbftpb_pbftpb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigVerOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pbftpb_pbftpb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_Preprepare)(nil),
		(*Message_Prepare)(nil),
		(*Message_Commit)(nil),
		(*Message_Done)(nil),
		(*Message_CatchUpRequest)(nil),
		(*Message_CatchUpResponse)(nil),
		(*Message_SignedViewChange)(nil),
		(*Message_PreprepareRequest)(nil),
		(*Message_MissingPreprepare)(nil),
		(*Message_NewView)(nil),
	}
	file_pbftpb_pbftpb_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*Event_ProposeTimeout)(nil),
		(*Event_ViewChangeSnTimeout)(nil),
		(*Event_ViewChangeSegTimeout)(nil),
	}
	file_pbftpb_pbftpb_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*HashOrigin_Preprepare)(nil),
		(*HashOrigin_MissingPreprepare)(nil),
		(*HashOrigin_NewView)(nil),
		(*HashOrigin_EmptyPreprepares)(nil),
		(*HashOrigin_CatchUpResponse)(nil),
	}
	file_pbftpb_pbftpb_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*SignOrigin_ViewChange)(nil),
	}
	file_pbftpb_pbftpb_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*SigVerOrigin_SignedViewChange)(nil),
		(*SigVerOrigin_NewView)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbftpb_pbftpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pbftpb_pbftpb_proto_goTypes,
		DependencyIndexes: file_pbftpb_pbftpb_proto_depIdxs,
		MessageInfos:      file_pbftpb_pbftpb_proto_msgTypes,
	}.Build()
	File_pbftpb_pbftpb_proto = out.File
	file_pbftpb_pbftpb_proto_rawDesc = nil
	file_pbftpb_pbftpb_proto_goTypes = nil
	file_pbftpb_pbftpb_proto_depIdxs = nil
}
