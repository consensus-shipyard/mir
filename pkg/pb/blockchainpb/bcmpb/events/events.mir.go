// Code generated by Mir codegen. DO NOT EDIT.

package bcmpbevents

import (
	types3 "github.com/filecoin-project/mir/pkg/pb/blockchainpb/bcmpb/types"
	types4 "github.com/filecoin-project/mir/pkg/pb/blockchainpb/statepb/types"
	types1 "github.com/filecoin-project/mir/pkg/pb/blockchainpb/types"
	types2 "github.com/filecoin-project/mir/pkg/pb/eventpb/types"
	types "github.com/filecoin-project/mir/pkg/types"
)

func NewBlock(destModule types.ModuleID, block *types1.Block) *types2.Event {
	return &types2.Event{
		DestModule: destModule,
		Type: &types2.Event_Bcm{
			Bcm: &types3.Event{
				Type: &types3.Event_NewBlock{
					NewBlock: &types3.NewBlock{
						Block: block,
					},
				},
			},
		},
	}
}

func NewChain(destModule types.ModuleID, blocks []*types1.Block) *types2.Event {
	return &types2.Event{
		DestModule: destModule,
		Type: &types2.Event_Bcm{
			Bcm: &types3.Event{
				Type: &types3.Event_NewChain{
					NewChain: &types3.NewChain{
						Blocks: blocks,
					},
				},
			},
		},
	}
}

func GetChainRequest(destModule types.ModuleID, requestId string, sourceModule types.ModuleID, endBlockId uint64, sourceBlockIds []uint64) *types2.Event {
	return &types2.Event{
		DestModule: destModule,
		Type: &types2.Event_Bcm{
			Bcm: &types3.Event{
				Type: &types3.Event_GetChainRequest{
					GetChainRequest: &types3.GetChainRequest{
						RequestId:      requestId,
						SourceModule:   sourceModule,
						EndBlockId:     endBlockId,
						SourceBlockIds: sourceBlockIds,
					},
				},
			},
		},
	}
}

func GetChainResponse(destModule types.ModuleID, requestId string, success bool, chain []*types1.Block) *types2.Event {
	return &types2.Event{
		DestModule: destModule,
		Type: &types2.Event_Bcm{
			Bcm: &types3.Event{
				Type: &types3.Event_GetChainResponse{
					GetChainResponse: &types3.GetChainResponse{
						RequestId: requestId,
						Success:   success,
						Chain:     chain,
					},
				},
			},
		},
	}
}

func RegisterCheckpoint(destModule types.ModuleID, blockId uint64, state *types4.State) *types2.Event {
	return &types2.Event{
		DestModule: destModule,
		Type: &types2.Event_Bcm{
			Bcm: &types3.Event{
				Type: &types3.Event_RegisterCheckpoint{
					RegisterCheckpoint: &types3.RegisterCheckpoint{
						BlockId: blockId,
						State:   state,
					},
				},
			},
		},
	}
}

func InitBlockchain(destModule types.ModuleID, initialState *types4.State) *types2.Event {
	return &types2.Event{
		DestModule: destModule,
		Type: &types2.Event_Bcm{
			Bcm: &types3.Event{
				Type: &types3.Event_InitBlockchain{
					InitBlockchain: &types3.InitBlockchain{
						InitialState: initialState,
					},
				},
			},
		},
	}
}
