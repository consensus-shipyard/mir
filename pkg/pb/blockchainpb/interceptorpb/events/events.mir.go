// Code generated by Mir codegen. DO NOT EDIT.

package interceptorpbevents

import (
	blockchainpb "github.com/filecoin-project/mir/pkg/pb/blockchainpb"
	types2 "github.com/filecoin-project/mir/pkg/pb/blockchainpb/interceptorpb/types"
	statepb "github.com/filecoin-project/mir/pkg/pb/blockchainpb/statepb"
	types1 "github.com/filecoin-project/mir/pkg/pb/eventpb/types"
	types "github.com/filecoin-project/mir/pkg/types"
)

func TreeUpdate(destModule types.ModuleID, tree *blockchainpb.Blocktree, headId uint64) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Bcinterceptor{
			Bcinterceptor: &types2.Event{
				Type: &types2.Event_TreeUpdate{
					TreeUpdate: &types2.TreeUpdate{
						Tree:   tree,
						HeadId: headId,
					},
				},
			},
		},
	}
}

func NewOrphan(destModule types.ModuleID, orphan *blockchainpb.Block) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Bcinterceptor{
			Bcinterceptor: &types2.Event{
				Type: &types2.Event_NewOrphan{
					NewOrphan: &types2.NewOrphan{
						Orphan: orphan,
					},
				},
			},
		},
	}
}

func AppUpdate(destModule types.ModuleID, state *statepb.State) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Bcinterceptor{
			Bcinterceptor: &types2.Event{
				Type: &types2.Event_AppUpdate{
					AppUpdate: &types2.AppUpdate{
						State: state,
					},
				},
			},
		},
	}
}
