//
//Copyright IBM Corp. All Rights Reserved.
//
//SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: eventpb/eventpb.proto

package eventpb

import (
	availabilitypb "github.com/filecoin-project/mir/pkg/pb/availabilitypb"
	bcbpb "github.com/filecoin-project/mir/pkg/pb/bcbpb"
	commonpb "github.com/filecoin-project/mir/pkg/pb/commonpb"
	contextstorepb "github.com/filecoin-project/mir/pkg/pb/contextstorepb"
	dslpb "github.com/filecoin-project/mir/pkg/pb/dslpb"
	isspb "github.com/filecoin-project/mir/pkg/pb/isspb"
	mempoolpb "github.com/filecoin-project/mir/pkg/pb/mempoolpb"
	messagepb "github.com/filecoin-project/mir/pkg/pb/messagepb"
	_ "github.com/filecoin-project/mir/pkg/pb/mir"
	requestpb "github.com/filecoin-project/mir/pkg/pb/requestpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event represents a state event to be injected into the state machine
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO, normalize naming, for instance Complete/Completed
	//
	// Types that are assignable to Type:
	//	*Event_Init
	//	*Event_Tick
	//	*Event_WalAppend
	//	*Event_WalEntry
	//	*Event_WalTruncate
	//	*Event_NewRequests
	//	*Event_HashRequest
	//	*Event_HashResult
	//	*Event_SignRequest
	//	*Event_SignResult
	//	*Event_VerifyNodeSigs
	//	*Event_NodeSigsVerified
	//	*Event_RequestReady
	//	*Event_SendMessage
	//	*Event_MessageReceived
	//	*Event_Deliver
	//	*Event_Iss
	//	*Event_VerifyRequestSig
	//	*Event_RequestSigVerified
	//	*Event_StoreVerifiedRequest
	//	*Event_StateSnapshotRequest
	//	*Event_StateSnapshot
	//	*Event_AppRestoreState
	//	*Event_TimerDelay
	//	*Event_TimerRepeat
	//	*Event_TimerGarbageCollect
	//	*Event_Bcb
	//	*Event_Mempool
	//	*Event_Availability
	//	*Event_NewEpoch
	//	*Event_NewConfig
	//	*Event_TestingString
	//	*Event_TestingUint
	Type isEvent_Type `protobuf_oneof:"type"`
	// A list of follow-up events to process after this event has been processed.
	// This field is used if events need to be processed in a particular order.
	// For example, a message sending event must only be processed
	// after the corresponding entry has been persisted in the write-ahead log (WAL).
	// In this case, the WAL append event would be this event
	// and the next field would contain the message sending event.
	Next       []*Event `protobuf:"bytes,100,rep,name=next,proto3" json:"next,omitempty"`
	DestModule string   `protobuf:"bytes,200,opt,name=dest_module,json=destModule,proto3" json:"dest_module,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{0}
}

func (m *Event) GetType() isEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Event) GetInit() *Init {
	if x, ok := x.GetType().(*Event_Init); ok {
		return x.Init
	}
	return nil
}

func (x *Event) GetTick() *Tick {
	if x, ok := x.GetType().(*Event_Tick); ok {
		return x.Tick
	}
	return nil
}

func (x *Event) GetWalAppend() *WALAppend {
	if x, ok := x.GetType().(*Event_WalAppend); ok {
		return x.WalAppend
	}
	return nil
}

func (x *Event) GetWalEntry() *WALEntry {
	if x, ok := x.GetType().(*Event_WalEntry); ok {
		return x.WalEntry
	}
	return nil
}

func (x *Event) GetWalTruncate() *WALTruncate {
	if x, ok := x.GetType().(*Event_WalTruncate); ok {
		return x.WalTruncate
	}
	return nil
}

func (x *Event) GetNewRequests() *NewRequests {
	if x, ok := x.GetType().(*Event_NewRequests); ok {
		return x.NewRequests
	}
	return nil
}

func (x *Event) GetHashRequest() *HashRequest {
	if x, ok := x.GetType().(*Event_HashRequest); ok {
		return x.HashRequest
	}
	return nil
}

func (x *Event) GetHashResult() *HashResult {
	if x, ok := x.GetType().(*Event_HashResult); ok {
		return x.HashResult
	}
	return nil
}

func (x *Event) GetSignRequest() *SignRequest {
	if x, ok := x.GetType().(*Event_SignRequest); ok {
		return x.SignRequest
	}
	return nil
}

func (x *Event) GetSignResult() *SignResult {
	if x, ok := x.GetType().(*Event_SignResult); ok {
		return x.SignResult
	}
	return nil
}

func (x *Event) GetVerifyNodeSigs() *VerifyNodeSigs {
	if x, ok := x.GetType().(*Event_VerifyNodeSigs); ok {
		return x.VerifyNodeSigs
	}
	return nil
}

func (x *Event) GetNodeSigsVerified() *NodeSigsVerified {
	if x, ok := x.GetType().(*Event_NodeSigsVerified); ok {
		return x.NodeSigsVerified
	}
	return nil
}

func (x *Event) GetRequestReady() *RequestReady {
	if x, ok := x.GetType().(*Event_RequestReady); ok {
		return x.RequestReady
	}
	return nil
}

func (x *Event) GetSendMessage() *SendMessage {
	if x, ok := x.GetType().(*Event_SendMessage); ok {
		return x.SendMessage
	}
	return nil
}

func (x *Event) GetMessageReceived() *MessageReceived {
	if x, ok := x.GetType().(*Event_MessageReceived); ok {
		return x.MessageReceived
	}
	return nil
}

func (x *Event) GetDeliver() *Deliver {
	if x, ok := x.GetType().(*Event_Deliver); ok {
		return x.Deliver
	}
	return nil
}

func (x *Event) GetIss() *isspb.ISSEvent {
	if x, ok := x.GetType().(*Event_Iss); ok {
		return x.Iss
	}
	return nil
}

func (x *Event) GetVerifyRequestSig() *VerifyRequestSig {
	if x, ok := x.GetType().(*Event_VerifyRequestSig); ok {
		return x.VerifyRequestSig
	}
	return nil
}

func (x *Event) GetRequestSigVerified() *RequestSigVerified {
	if x, ok := x.GetType().(*Event_RequestSigVerified); ok {
		return x.RequestSigVerified
	}
	return nil
}

func (x *Event) GetStoreVerifiedRequest() *StoreVerifiedRequest {
	if x, ok := x.GetType().(*Event_StoreVerifiedRequest); ok {
		return x.StoreVerifiedRequest
	}
	return nil
}

func (x *Event) GetStateSnapshotRequest() *StateSnapshotRequest {
	if x, ok := x.GetType().(*Event_StateSnapshotRequest); ok {
		return x.StateSnapshotRequest
	}
	return nil
}

func (x *Event) GetStateSnapshot() *commonpb.StateSnapshot {
	if x, ok := x.GetType().(*Event_StateSnapshot); ok {
		return x.StateSnapshot
	}
	return nil
}

func (x *Event) GetAppRestoreState() *AppRestoreState {
	if x, ok := x.GetType().(*Event_AppRestoreState); ok {
		return x.AppRestoreState
	}
	return nil
}

func (x *Event) GetTimerDelay() *TimerDelay {
	if x, ok := x.GetType().(*Event_TimerDelay); ok {
		return x.TimerDelay
	}
	return nil
}

func (x *Event) GetTimerRepeat() *TimerRepeat {
	if x, ok := x.GetType().(*Event_TimerRepeat); ok {
		return x.TimerRepeat
	}
	return nil
}

func (x *Event) GetTimerGarbageCollect() *TimerGarbageCollect {
	if x, ok := x.GetType().(*Event_TimerGarbageCollect); ok {
		return x.TimerGarbageCollect
	}
	return nil
}

func (x *Event) GetBcb() *bcbpb.Event {
	if x, ok := x.GetType().(*Event_Bcb); ok {
		return x.Bcb
	}
	return nil
}

func (x *Event) GetMempool() *mempoolpb.Event {
	if x, ok := x.GetType().(*Event_Mempool); ok {
		return x.Mempool
	}
	return nil
}

func (x *Event) GetAvailability() *availabilitypb.Event {
	if x, ok := x.GetType().(*Event_Availability); ok {
		return x.Availability
	}
	return nil
}

func (x *Event) GetNewEpoch() *NewEpoch {
	if x, ok := x.GetType().(*Event_NewEpoch); ok {
		return x.NewEpoch
	}
	return nil
}

func (x *Event) GetNewConfig() *NewConfig {
	if x, ok := x.GetType().(*Event_NewConfig); ok {
		return x.NewConfig
	}
	return nil
}

func (x *Event) GetTestingString() *wrapperspb.StringValue {
	if x, ok := x.GetType().(*Event_TestingString); ok {
		return x.TestingString
	}
	return nil
}

func (x *Event) GetTestingUint() *wrapperspb.UInt64Value {
	if x, ok := x.GetType().(*Event_TestingUint); ok {
		return x.TestingUint
	}
	return nil
}

func (x *Event) GetNext() []*Event {
	if x != nil {
		return x.Next
	}
	return nil
}

func (x *Event) GetDestModule() string {
	if x != nil {
		return x.DestModule
	}
	return ""
}

type isEvent_Type interface {
	isEvent_Type()
}

type Event_Init struct {
	Init *Init `protobuf:"bytes,1,opt,name=init,proto3,oneof"`
}

type Event_Tick struct {
	Tick *Tick `protobuf:"bytes,2,opt,name=tick,proto3,oneof"`
}

type Event_WalAppend struct {
	WalAppend *WALAppend `protobuf:"bytes,3,opt,name=wal_append,json=walAppend,proto3,oneof"`
}

type Event_WalEntry struct {
	WalEntry *WALEntry `protobuf:"bytes,4,opt,name=wal_entry,json=walEntry,proto3,oneof"`
}

type Event_WalTruncate struct {
	WalTruncate *WALTruncate `protobuf:"bytes,5,opt,name=wal_truncate,json=walTruncate,proto3,oneof"`
}

type Event_NewRequests struct {
	NewRequests *NewRequests `protobuf:"bytes,7,opt,name=new_requests,json=newRequests,proto3,oneof"`
}

type Event_HashRequest struct {
	HashRequest *HashRequest `protobuf:"bytes,8,opt,name=hash_request,json=hashRequest,proto3,oneof"`
}

type Event_HashResult struct {
	HashResult *HashResult `protobuf:"bytes,9,opt,name=hash_result,json=hashResult,proto3,oneof"`
}

type Event_SignRequest struct {
	SignRequest *SignRequest `protobuf:"bytes,10,opt,name=sign_request,json=signRequest,proto3,oneof"`
}

type Event_SignResult struct {
	SignResult *SignResult `protobuf:"bytes,11,opt,name=sign_result,json=signResult,proto3,oneof"`
}

type Event_VerifyNodeSigs struct {
	VerifyNodeSigs *VerifyNodeSigs `protobuf:"bytes,12,opt,name=verify_node_sigs,json=verifyNodeSigs,proto3,oneof"`
}

type Event_NodeSigsVerified struct {
	NodeSigsVerified *NodeSigsVerified `protobuf:"bytes,13,opt,name=node_sigs_verified,json=nodeSigsVerified,proto3,oneof"`
}

type Event_RequestReady struct {
	RequestReady *RequestReady `protobuf:"bytes,14,opt,name=request_ready,json=requestReady,proto3,oneof"`
}

type Event_SendMessage struct {
	SendMessage *SendMessage `protobuf:"bytes,15,opt,name=send_message,json=sendMessage,proto3,oneof"`
}

type Event_MessageReceived struct {
	MessageReceived *MessageReceived `protobuf:"bytes,16,opt,name=message_received,json=messageReceived,proto3,oneof"`
}

type Event_Deliver struct {
	Deliver *Deliver `protobuf:"bytes,17,opt,name=deliver,proto3,oneof"`
}

type Event_Iss struct {
	Iss *isspb.ISSEvent `protobuf:"bytes,18,opt,name=iss,proto3,oneof"`
}

type Event_VerifyRequestSig struct {
	VerifyRequestSig *VerifyRequestSig `protobuf:"bytes,19,opt,name=verify_request_sig,json=verifyRequestSig,proto3,oneof"`
}

type Event_RequestSigVerified struct {
	RequestSigVerified *RequestSigVerified `protobuf:"bytes,20,opt,name=request_sig_verified,json=requestSigVerified,proto3,oneof"`
}

type Event_StoreVerifiedRequest struct {
	StoreVerifiedRequest *StoreVerifiedRequest `protobuf:"bytes,21,opt,name=store_verified_request,json=storeVerifiedRequest,proto3,oneof"`
}

type Event_StateSnapshotRequest struct {
	StateSnapshotRequest *StateSnapshotRequest `protobuf:"bytes,22,opt,name=state_snapshot_request,json=stateSnapshotRequest,proto3,oneof"`
}

type Event_StateSnapshot struct {
	StateSnapshot *commonpb.StateSnapshot `protobuf:"bytes,23,opt,name=state_snapshot,json=stateSnapshot,proto3,oneof"`
}

type Event_AppRestoreState struct {
	AppRestoreState *AppRestoreState `protobuf:"bytes,24,opt,name=app_restore_state,json=appRestoreState,proto3,oneof"`
}

type Event_TimerDelay struct {
	TimerDelay *TimerDelay `protobuf:"bytes,25,opt,name=timer_delay,json=timerDelay,proto3,oneof"`
}

type Event_TimerRepeat struct {
	TimerRepeat *TimerRepeat `protobuf:"bytes,26,opt,name=timer_repeat,json=timerRepeat,proto3,oneof"`
}

type Event_TimerGarbageCollect struct {
	TimerGarbageCollect *TimerGarbageCollect `protobuf:"bytes,27,opt,name=timer_garbage_collect,json=timerGarbageCollect,proto3,oneof"`
}

type Event_Bcb struct {
	Bcb *bcbpb.Event `protobuf:"bytes,28,opt,name=bcb,proto3,oneof"`
}

type Event_Mempool struct {
	Mempool *mempoolpb.Event `protobuf:"bytes,29,opt,name=mempool,proto3,oneof"`
}

type Event_Availability struct {
	Availability *availabilitypb.Event `protobuf:"bytes,30,opt,name=availability,proto3,oneof"`
}

type Event_NewEpoch struct {
	NewEpoch *NewEpoch `protobuf:"bytes,31,opt,name=new_epoch,json=newEpoch,proto3,oneof"`
}

type Event_NewConfig struct {
	NewConfig *NewConfig `protobuf:"bytes,32,opt,name=new_config,json=newConfig,proto3,oneof"`
}

type Event_TestingString struct {
	// for unit-tests
	TestingString *wrapperspb.StringValue `protobuf:"bytes,301,opt,name=testingString,proto3,oneof"`
}

type Event_TestingUint struct {
	TestingUint *wrapperspb.UInt64Value `protobuf:"bytes,302,opt,name=testingUint,proto3,oneof"`
}

func (*Event_Init) isEvent_Type() {}

func (*Event_Tick) isEvent_Type() {}

func (*Event_WalAppend) isEvent_Type() {}

func (*Event_WalEntry) isEvent_Type() {}

func (*Event_WalTruncate) isEvent_Type() {}

func (*Event_NewRequests) isEvent_Type() {}

func (*Event_HashRequest) isEvent_Type() {}

func (*Event_HashResult) isEvent_Type() {}

func (*Event_SignRequest) isEvent_Type() {}

func (*Event_SignResult) isEvent_Type() {}

func (*Event_VerifyNodeSigs) isEvent_Type() {}

func (*Event_NodeSigsVerified) isEvent_Type() {}

func (*Event_RequestReady) isEvent_Type() {}

func (*Event_SendMessage) isEvent_Type() {}

func (*Event_MessageReceived) isEvent_Type() {}

func (*Event_Deliver) isEvent_Type() {}

func (*Event_Iss) isEvent_Type() {}

func (*Event_VerifyRequestSig) isEvent_Type() {}

func (*Event_RequestSigVerified) isEvent_Type() {}

func (*Event_StoreVerifiedRequest) isEvent_Type() {}

func (*Event_StateSnapshotRequest) isEvent_Type() {}

func (*Event_StateSnapshot) isEvent_Type() {}

func (*Event_AppRestoreState) isEvent_Type() {}

func (*Event_TimerDelay) isEvent_Type() {}

func (*Event_TimerRepeat) isEvent_Type() {}

func (*Event_TimerGarbageCollect) isEvent_Type() {}

func (*Event_Bcb) isEvent_Type() {}

func (*Event_Mempool) isEvent_Type() {}

func (*Event_Availability) isEvent_Type() {}

func (*Event_NewEpoch) isEvent_Type() {}

func (*Event_NewConfig) isEvent_Type() {}

func (*Event_TestingString) isEvent_Type() {}

func (*Event_TestingUint) isEvent_Type() {}

type Init struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Init) Reset() {
	*x = Init{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Init) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Init) ProtoMessage() {}

func (x *Init) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Init.ProtoReflect.Descriptor instead.
func (*Init) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{1}
}

type Tick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Tick) Reset() {
	*x = Tick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tick) ProtoMessage() {}

func (x *Tick) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tick.ProtoReflect.Descriptor instead.
func (*Tick) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{2}
}

type NewRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*requestpb.Request `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *NewRequests) Reset() {
	*x = NewRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRequests) ProtoMessage() {}

func (x *NewRequests) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRequests.ProtoReflect.Descriptor instead.
func (*NewRequests) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{3}
}

func (x *NewRequests) GetRequests() []*requestpb.Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

type HashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []*commonpb.HashData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Origin *HashOrigin          `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *HashRequest) Reset() {
	*x = HashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashRequest) ProtoMessage() {}

func (x *HashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashRequest.ProtoReflect.Descriptor instead.
func (*HashRequest) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{4}
}

func (x *HashRequest) GetData() []*commonpb.HashData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HashRequest) GetOrigin() *HashOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type HashResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digests [][]byte    `protobuf:"bytes,1,rep,name=digests,proto3" json:"digests,omitempty"`
	Origin  *HashOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *HashResult) Reset() {
	*x = HashResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashResult) ProtoMessage() {}

func (x *HashResult) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashResult.ProtoReflect.Descriptor instead.
func (*HashResult) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{5}
}

func (x *HashResult) GetDigests() [][]byte {
	if x != nil {
		return x.Digests
	}
	return nil
}

func (x *HashResult) GetOrigin() *HashOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type HashOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// Types that are assignable to Type:
	//	*HashOrigin_ContextStore
	//	*HashOrigin_Request
	//	*HashOrigin_Iss
	//	*HashOrigin_Dsl
	Type isHashOrigin_Type `protobuf_oneof:"type"`
}

func (x *HashOrigin) Reset() {
	*x = HashOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashOrigin) ProtoMessage() {}

func (x *HashOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashOrigin.ProtoReflect.Descriptor instead.
func (*HashOrigin) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{6}
}

func (x *HashOrigin) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (m *HashOrigin) GetType() isHashOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *HashOrigin) GetContextStore() *contextstorepb.Origin {
	if x, ok := x.GetType().(*HashOrigin_ContextStore); ok {
		return x.ContextStore
	}
	return nil
}

func (x *HashOrigin) GetRequest() *requestpb.Request {
	if x, ok := x.GetType().(*HashOrigin_Request); ok {
		return x.Request
	}
	return nil
}

func (x *HashOrigin) GetIss() *isspb.ISSHashOrigin {
	if x, ok := x.GetType().(*HashOrigin_Iss); ok {
		return x.Iss
	}
	return nil
}

func (x *HashOrigin) GetDsl() *dslpb.Origin {
	if x, ok := x.GetType().(*HashOrigin_Dsl); ok {
		return x.Dsl
	}
	return nil
}

type isHashOrigin_Type interface {
	isHashOrigin_Type()
}

type HashOrigin_ContextStore struct {
	ContextStore *contextstorepb.Origin `protobuf:"bytes,2,opt,name=context_store,json=contextStore,proto3,oneof"`
}

type HashOrigin_Request struct {
	Request *requestpb.Request `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

type HashOrigin_Iss struct {
	Iss *isspb.ISSHashOrigin `protobuf:"bytes,4,opt,name=iss,proto3,oneof"`
}

type HashOrigin_Dsl struct {
	Dsl *dslpb.Origin `protobuf:"bytes,5,opt,name=dsl,proto3,oneof"`
}

func (*HashOrigin_ContextStore) isHashOrigin_Type() {}

func (*HashOrigin_Request) isHashOrigin_Type() {}

func (*HashOrigin_Iss) isHashOrigin_Type() {}

func (*HashOrigin_Dsl) isHashOrigin_Type() {}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   [][]byte    `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Origin *SignOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{7}
}

func (x *SignRequest) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SignRequest) GetOrigin() *SignOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type SignResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte      `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Origin    *SignOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *SignResult) Reset() {
	*x = SignResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignResult) ProtoMessage() {}

func (x *SignResult) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignResult.ProtoReflect.Descriptor instead.
func (*SignResult) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{8}
}

func (x *SignResult) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignResult) GetOrigin() *SignOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

type SignOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// Types that are assignable to Type:
	//	*SignOrigin_ContextStore
	//	*SignOrigin_Iss
	//	*SignOrigin_Dsl
	Type isSignOrigin_Type `protobuf_oneof:"type"`
}

func (x *SignOrigin) Reset() {
	*x = SignOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOrigin) ProtoMessage() {}

func (x *SignOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOrigin.ProtoReflect.Descriptor instead.
func (*SignOrigin) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{9}
}

func (x *SignOrigin) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (m *SignOrigin) GetType() isSignOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SignOrigin) GetContextStore() *contextstorepb.Origin {
	if x, ok := x.GetType().(*SignOrigin_ContextStore); ok {
		return x.ContextStore
	}
	return nil
}

func (x *SignOrigin) GetIss() *isspb.ISSSignOrigin {
	if x, ok := x.GetType().(*SignOrigin_Iss); ok {
		return x.Iss
	}
	return nil
}

func (x *SignOrigin) GetDsl() *dslpb.Origin {
	if x, ok := x.GetType().(*SignOrigin_Dsl); ok {
		return x.Dsl
	}
	return nil
}

type isSignOrigin_Type interface {
	isSignOrigin_Type()
}

type SignOrigin_ContextStore struct {
	ContextStore *contextstorepb.Origin `protobuf:"bytes,2,opt,name=context_store,json=contextStore,proto3,oneof"`
}

type SignOrigin_Iss struct {
	Iss *isspb.ISSSignOrigin `protobuf:"bytes,3,opt,name=iss,proto3,oneof"`
}

type SignOrigin_Dsl struct {
	Dsl *dslpb.Origin `protobuf:"bytes,4,opt,name=dsl,proto3,oneof"`
}

func (*SignOrigin_ContextStore) isSignOrigin_Type() {}

func (*SignOrigin_Iss) isSignOrigin_Type() {}

func (*SignOrigin_Dsl) isSignOrigin_Type() {}

type SigVerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data [][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SigVerData) Reset() {
	*x = SigVerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigVerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigVerData) ProtoMessage() {}

func (x *SigVerData) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigVerData.ProtoReflect.Descriptor instead.
func (*SigVerData) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{10}
}

func (x *SigVerData) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type VerifyNodeSigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*SigVerData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Signatures [][]byte      `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
	Origin     *SigVerOrigin `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	NodeIds    []string      `protobuf:"bytes,4,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
}

func (x *VerifyNodeSigs) Reset() {
	*x = VerifyNodeSigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyNodeSigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyNodeSigs) ProtoMessage() {}

func (x *VerifyNodeSigs) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyNodeSigs.ProtoReflect.Descriptor instead.
func (*VerifyNodeSigs) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{11}
}

func (x *VerifyNodeSigs) GetData() []*SigVerData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VerifyNodeSigs) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *VerifyNodeSigs) GetOrigin() *SigVerOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *VerifyNodeSigs) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

type NodeSigsVerified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin  *SigVerOrigin `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	NodeIds []string      `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	Valid   []bool        `protobuf:"varint,3,rep,packed,name=valid,proto3" json:"valid,omitempty"`
	Errors  []string      `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	AllOk   bool          `protobuf:"varint,5,opt,name=all_ok,json=allOk,proto3" json:"all_ok,omitempty"`
}

func (x *NodeSigsVerified) Reset() {
	*x = NodeSigsVerified{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSigsVerified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSigsVerified) ProtoMessage() {}

func (x *NodeSigsVerified) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSigsVerified.ProtoReflect.Descriptor instead.
func (*NodeSigsVerified) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{12}
}

func (x *NodeSigsVerified) GetOrigin() *SigVerOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *NodeSigsVerified) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *NodeSigsVerified) GetValid() []bool {
	if x != nil {
		return x.Valid
	}
	return nil
}

func (x *NodeSigsVerified) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *NodeSigsVerified) GetAllOk() bool {
	if x != nil {
		return x.AllOk
	}
	return false
}

type SigVerOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	// Types that are assignable to Type:
	//	*SigVerOrigin_ContextStore
	//	*SigVerOrigin_Iss
	//	*SigVerOrigin_Dsl
	Type isSigVerOrigin_Type `protobuf_oneof:"type"`
}

func (x *SigVerOrigin) Reset() {
	*x = SigVerOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigVerOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigVerOrigin) ProtoMessage() {}

func (x *SigVerOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigVerOrigin.ProtoReflect.Descriptor instead.
func (*SigVerOrigin) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{13}
}

func (x *SigVerOrigin) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (m *SigVerOrigin) GetType() isSigVerOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SigVerOrigin) GetContextStore() *contextstorepb.Origin {
	if x, ok := x.GetType().(*SigVerOrigin_ContextStore); ok {
		return x.ContextStore
	}
	return nil
}

func (x *SigVerOrigin) GetIss() *isspb.ISSSigVerOrigin {
	if x, ok := x.GetType().(*SigVerOrigin_Iss); ok {
		return x.Iss
	}
	return nil
}

func (x *SigVerOrigin) GetDsl() *dslpb.Origin {
	if x, ok := x.GetType().(*SigVerOrigin_Dsl); ok {
		return x.Dsl
	}
	return nil
}

type isSigVerOrigin_Type interface {
	isSigVerOrigin_Type()
}

type SigVerOrigin_ContextStore struct {
	ContextStore *contextstorepb.Origin `protobuf:"bytes,2,opt,name=context_store,json=contextStore,proto3,oneof"`
}

type SigVerOrigin_Iss struct {
	Iss *isspb.ISSSigVerOrigin `protobuf:"bytes,3,opt,name=iss,proto3,oneof"`
}

type SigVerOrigin_Dsl struct {
	Dsl *dslpb.Origin `protobuf:"bytes,4,opt,name=dsl,proto3,oneof"`
}

func (*SigVerOrigin_ContextStore) isSigVerOrigin_Type() {}

func (*SigVerOrigin_Iss) isSigVerOrigin_Type() {}

func (*SigVerOrigin_Dsl) isSigVerOrigin_Type() {}

type RequestReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *requestpb.Request `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *RequestReady) Reset() {
	*x = RequestReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestReady) ProtoMessage() {}

func (x *RequestReady) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestReady.ProtoReflect.Descriptor instead.
func (*RequestReady) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{14}
}

func (x *RequestReady) GetRequest() *requestpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type SendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destinations []string           `protobuf:"bytes,1,rep,name=destinations,proto3" json:"destinations,omitempty"`
	Msg          *messagepb.Message `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendMessage) Reset() {
	*x = SendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessage) ProtoMessage() {}

func (x *SendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessage.ProtoReflect.Descriptor instead.
func (*SendMessage) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{15}
}

func (x *SendMessage) GetDestinations() []string {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *SendMessage) GetMsg() *messagepb.Message {
	if x != nil {
		return x.Msg
	}
	return nil
}

type MessageReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string             `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Msg  *messagepb.Message `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MessageReceived) Reset() {
	*x = MessageReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReceived) ProtoMessage() {}

func (x *MessageReceived) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReceived.ProtoReflect.Descriptor instead.
func (*MessageReceived) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{16}
}

func (x *MessageReceived) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MessageReceived) GetMsg() *messagepb.Message {
	if x != nil {
		return x.Msg
	}
	return nil
}

type WALAppend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event          *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	RetentionIndex uint64 `protobuf:"varint,2,opt,name=retention_index,json=retentionIndex,proto3" json:"retention_index,omitempty"`
}

func (x *WALAppend) Reset() {
	*x = WALAppend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WALAppend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALAppend) ProtoMessage() {}

func (x *WALAppend) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALAppend.ProtoReflect.Descriptor instead.
func (*WALAppend) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{17}
}

func (x *WALAppend) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *WALAppend) GetRetentionIndex() uint64 {
	if x != nil {
		return x.RetentionIndex
	}
	return 0
}

type WALEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *WALEntry) Reset() {
	*x = WALEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WALEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALEntry) ProtoMessage() {}

func (x *WALEntry) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALEntry.ProtoReflect.Descriptor instead.
func (*WALEntry) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{18}
}

func (x *WALEntry) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type WALTruncate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetentionIndex uint64 `protobuf:"varint,1,opt,name=retention_index,json=retentionIndex,proto3" json:"retention_index,omitempty"`
}

func (x *WALTruncate) Reset() {
	*x = WALTruncate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WALTruncate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALTruncate) ProtoMessage() {}

func (x *WALTruncate) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALTruncate.ProtoReflect.Descriptor instead.
func (*WALTruncate) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{19}
}

func (x *WALTruncate) GetRetentionIndex() uint64 {
	if x != nil {
		return x.RetentionIndex
	}
	return 0
}

type WALLoadAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WALLoadAll) Reset() {
	*x = WALLoadAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WALLoadAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALLoadAll) ProtoMessage() {}

func (x *WALLoadAll) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALLoadAll.ProtoReflect.Descriptor instead.
func (*WALLoadAll) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{20}
}

type Deliver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn    uint64           `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	Batch *requestpb.Batch `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *Deliver) Reset() {
	*x = Deliver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deliver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deliver) ProtoMessage() {}

func (x *Deliver) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deliver.ProtoReflect.Descriptor instead.
func (*Deliver) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{21}
}

func (x *Deliver) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *Deliver) GetBatch() *requestpb.Batch {
	if x != nil {
		return x.Batch
	}
	return nil
}

type VerifyRequestSig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request   *requestpb.Request `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Signature []byte             `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *VerifyRequestSig) Reset() {
	*x = VerifyRequestSig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRequestSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequestSig) ProtoMessage() {}

func (x *VerifyRequestSig) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequestSig.ProtoReflect.Descriptor instead.
func (*VerifyRequestSig) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{22}
}

func (x *VerifyRequestSig) GetRequest() *requestpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *VerifyRequestSig) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type RequestSigVerified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *requestpb.Request `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Valid   bool               `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	Error   string             `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RequestSigVerified) Reset() {
	*x = RequestSigVerified{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSigVerified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSigVerified) ProtoMessage() {}

func (x *RequestSigVerified) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSigVerified.ProtoReflect.Descriptor instead.
func (*RequestSigVerified) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{23}
}

func (x *RequestSigVerified) GetRequest() *requestpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *RequestSigVerified) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *RequestSigVerified) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StoreVerifiedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request       *requestpb.Request `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Data          []byte             `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Authenticator []byte             `protobuf:"bytes,3,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
}

func (x *StoreVerifiedRequest) Reset() {
	*x = StoreVerifiedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreVerifiedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreVerifiedRequest) ProtoMessage() {}

func (x *StoreVerifiedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreVerifiedRequest.ProtoReflect.Descriptor instead.
func (*StoreVerifiedRequest) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{24}
}

func (x *StoreVerifiedRequest) GetRequest() *requestpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *StoreVerifiedRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StoreVerifiedRequest) GetAuthenticator() []byte {
	if x != nil {
		return x.Authenticator
	}
	return nil
}

type StateSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *StateSnapshotRequest) Reset() {
	*x = StateSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSnapshotRequest) ProtoMessage() {}

func (x *StateSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSnapshotRequest.ProtoReflect.Descriptor instead.
func (*StateSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{25}
}

func (x *StateSnapshotRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type AppRestoreState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *commonpb.StateSnapshot `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *AppRestoreState) Reset() {
	*x = AppRestoreState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRestoreState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRestoreState) ProtoMessage() {}

func (x *AppRestoreState) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRestoreState.ProtoReflect.Descriptor instead.
func (*AppRestoreState) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{26}
}

func (x *AppRestoreState) GetSnapshot() *commonpb.StateSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type TimerDelay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Delay  uint64   `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
}

func (x *TimerDelay) Reset() {
	*x = TimerDelay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerDelay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerDelay) ProtoMessage() {}

func (x *TimerDelay) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerDelay.ProtoReflect.Descriptor instead.
func (*TimerDelay) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{27}
}

func (x *TimerDelay) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *TimerDelay) GetDelay() uint64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type TimerRepeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events         []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Delay          uint64   `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	RetentionIndex uint64   `protobuf:"varint,3,opt,name=retention_index,json=retentionIndex,proto3" json:"retention_index,omitempty"`
}

func (x *TimerRepeat) Reset() {
	*x = TimerRepeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerRepeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerRepeat) ProtoMessage() {}

func (x *TimerRepeat) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerRepeat.ProtoReflect.Descriptor instead.
func (*TimerRepeat) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{28}
}

func (x *TimerRepeat) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *TimerRepeat) GetDelay() uint64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *TimerRepeat) GetRetentionIndex() uint64 {
	if x != nil {
		return x.RetentionIndex
	}
	return 0
}

type TimerGarbageCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetentionIndex uint64 `protobuf:"varint,1,opt,name=retention_index,json=retentionIndex,proto3" json:"retention_index,omitempty"`
}

func (x *TimerGarbageCollect) Reset() {
	*x = TimerGarbageCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerGarbageCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerGarbageCollect) ProtoMessage() {}

func (x *TimerGarbageCollect) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerGarbageCollect.ProtoReflect.Descriptor instead.
func (*TimerGarbageCollect) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{29}
}

func (x *TimerGarbageCollect) GetRetentionIndex() uint64 {
	if x != nil {
		return x.RetentionIndex
	}
	return 0
}

type NewEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNr uint64 `protobuf:"varint,1,opt,name=epoch_nr,json=epochNr,proto3" json:"epoch_nr,omitempty"`
}

func (x *NewEpoch) Reset() {
	*x = NewEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEpoch) ProtoMessage() {}

func (x *NewEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEpoch.ProtoReflect.Descriptor instead.
func (*NewEpoch) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{30}
}

func (x *NewEpoch) GetEpochNr() uint64 {
	if x != nil {
		return x.EpochNr
	}
	return 0
}

type NewConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeIds []string `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
}

func (x *NewConfig) Reset() {
	*x = NewConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventpb_eventpb_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewConfig) ProtoMessage() {}

func (x *NewConfig) ProtoReflect() protoreflect.Message {
	mi := &file_eventpb_eventpb_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewConfig.ProtoReflect.Descriptor instead.
func (*NewConfig) Descriptor() ([]byte, []int) {
	return file_eventpb_eventpb_proto_rawDescGZIP(), []int{31}
}

func (x *NewConfig) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

var File_eventpb_eventpb_proto protoreflect.FileDescriptor

var file_eventpb_eventpb_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x1a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x69, 0x73, 0x73, 0x70, 0x62, 0x2f, 0x69, 0x73, 0x73, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x62, 0x63, 0x62, 0x70, 0x62, 0x2f, 0x62, 0x63, 0x62, 0x70, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6d, 0x69, 0x72, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x64, 0x73,
	0x6c, 0x70, 0x62, 0x2f, 0x64, 0x73, 0x6c, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x6d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x6d, 0x70, 0x6f,
	0x6f, 0x6c, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa4, 0x10, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x69, 0x63, 0x6b, 0x12, 0x33, 0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x57, 0x41, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x09, 0x77,
	0x61, 0x6c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0c, 0x77, 0x61,
	0x6c, 0x5f, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x57, 0x41, 0x4c, 0x54, 0x72,
	0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x61, 0x6c, 0x54, 0x72, 0x75,
	0x6e, 0x63, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x39, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x68, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x68,
	0x61, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x69, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x69, 0x67, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x69, 0x67, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x69, 0x67, 0x73, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x12, 0x39, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x45, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x03, 0x69, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x73, 0x73, 0x70, 0x62, 0x2e, 0x49, 0x53, 0x53, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x03, 0x69, 0x73, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67,
	0x48, 0x00, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x69, 0x67, 0x12, 0x4f, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x73, 0x69, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x16, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x16,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x39, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x12, 0x52, 0x0a, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x72, 0x62, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x47,
	0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52,
	0x13, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x62, 0x63, 0x62, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x63, 0x62, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x03, 0x62, 0x63, 0x62, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x70, 0x6f, 0x6f,
	0x6c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x6d, 0x70, 0x6f, 0x6f,
	0x6c, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x6d,
	0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x30, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x33, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x09, 0x6e,
	0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x45, 0x0a, 0x0d, 0x74, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x41, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x18, 0xae,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x69,
	0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x04, 0x80, 0xb5, 0x18, 0x01, 0x22, 0x06, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x22, 0x06,
	0x0a, 0x04, 0x54, 0x69, 0x63, 0x6b, 0x22, 0x3d, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x0b, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x48, 0x61,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x53, 0x0a, 0x0a, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x2b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xe8,
	0x01, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x03, 0x69, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x73, 0x73, 0x70, 0x62, 0x2e, 0x49, 0x53, 0x53, 0x48, 0x61, 0x73,
	0x68, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x69, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x03, 0x64, 0x73, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x73,
	0x6c, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x73,
	0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x0b, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x57, 0x0a, 0x0a, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x22, 0xb8, 0x01, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x03, 0x69, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x73, 0x73, 0x70, 0x62, 0x2e, 0x49, 0x53,
	0x53, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x69,
	0x73, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x64, 0x73, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x73, 0x6c, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00,
	0x52, 0x03, 0x64, 0x73, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x20, 0x0a,
	0x0a, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa3, 0x01, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x69,
	0x67, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x56, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x69,
	0x67, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x6c, 0x6c, 0x4f, 0x6b, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x53, 0x69,
	0x67, 0x56, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x2a, 0x0a, 0x03, 0x69, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x69, 0x73, 0x73, 0x70, 0x62, 0x2e, 0x49, 0x53, 0x53, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x69, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x03, 0x64, 0x73, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x73, 0x6c,
	0x70, 0x62, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x64, 0x73, 0x6c,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x4b, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5a, 0x0a, 0x09,
	0x57, 0x41, 0x4c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x30, 0x0a, 0x08, 0x57, 0x41, 0x4c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x0b, 0x57, 0x41,
	0x4c, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x0c, 0x0a, 0x0a, 0x57, 0x41, 0x4c, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x22, 0x41, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x73,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x22, 0x5e, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69,
	0x67, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x7e, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x4a, 0x0a, 0x0a, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x74, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72,
	0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3e, 0x0a,
	0x13, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x47, 0x61, 0x72, 0x62, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72,
	0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x25, 0x0a,
	0x08, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x5f, 0x6e, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x4e, 0x72, 0x22, 0x26, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x42, 0x30, 0x5a, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eventpb_eventpb_proto_rawDescOnce sync.Once
	file_eventpb_eventpb_proto_rawDescData = file_eventpb_eventpb_proto_rawDesc
)

func file_eventpb_eventpb_proto_rawDescGZIP() []byte {
	file_eventpb_eventpb_proto_rawDescOnce.Do(func() {
		file_eventpb_eventpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_eventpb_eventpb_proto_rawDescData)
	})
	return file_eventpb_eventpb_proto_rawDescData
}

var file_eventpb_eventpb_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_eventpb_eventpb_proto_goTypes = []interface{}{
	(*Event)(nil),                  // 0: eventpb.Event
	(*Init)(nil),                   // 1: eventpb.Init
	(*Tick)(nil),                   // 2: eventpb.Tick
	(*NewRequests)(nil),            // 3: eventpb.NewRequests
	(*HashRequest)(nil),            // 4: eventpb.HashRequest
	(*HashResult)(nil),             // 5: eventpb.HashResult
	(*HashOrigin)(nil),             // 6: eventpb.HashOrigin
	(*SignRequest)(nil),            // 7: eventpb.SignRequest
	(*SignResult)(nil),             // 8: eventpb.SignResult
	(*SignOrigin)(nil),             // 9: eventpb.SignOrigin
	(*SigVerData)(nil),             // 10: eventpb.SigVerData
	(*VerifyNodeSigs)(nil),         // 11: eventpb.VerifyNodeSigs
	(*NodeSigsVerified)(nil),       // 12: eventpb.NodeSigsVerified
	(*SigVerOrigin)(nil),           // 13: eventpb.SigVerOrigin
	(*RequestReady)(nil),           // 14: eventpb.RequestReady
	(*SendMessage)(nil),            // 15: eventpb.SendMessage
	(*MessageReceived)(nil),        // 16: eventpb.MessageReceived
	(*WALAppend)(nil),              // 17: eventpb.WALAppend
	(*WALEntry)(nil),               // 18: eventpb.WALEntry
	(*WALTruncate)(nil),            // 19: eventpb.WALTruncate
	(*WALLoadAll)(nil),             // 20: eventpb.WALLoadAll
	(*Deliver)(nil),                // 21: eventpb.Deliver
	(*VerifyRequestSig)(nil),       // 22: eventpb.VerifyRequestSig
	(*RequestSigVerified)(nil),     // 23: eventpb.RequestSigVerified
	(*StoreVerifiedRequest)(nil),   // 24: eventpb.StoreVerifiedRequest
	(*StateSnapshotRequest)(nil),   // 25: eventpb.StateSnapshotRequest
	(*AppRestoreState)(nil),        // 26: eventpb.AppRestoreState
	(*TimerDelay)(nil),             // 27: eventpb.TimerDelay
	(*TimerRepeat)(nil),            // 28: eventpb.TimerRepeat
	(*TimerGarbageCollect)(nil),    // 29: eventpb.TimerGarbageCollect
	(*NewEpoch)(nil),               // 30: eventpb.NewEpoch
	(*NewConfig)(nil),              // 31: eventpb.NewConfig
	(*isspb.ISSEvent)(nil),         // 32: isspb.ISSEvent
	(*commonpb.StateSnapshot)(nil), // 33: commonpb.StateSnapshot
	(*bcbpb.Event)(nil),            // 34: bcbpb.Event
	(*mempoolpb.Event)(nil),        // 35: mempoolpb.Event
	(*availabilitypb.Event)(nil),   // 36: availabilitypb.Event
	(*wrapperspb.StringValue)(nil), // 37: google.protobuf.StringValue
	(*wrapperspb.UInt64Value)(nil), // 38: google.protobuf.UInt64Value
	(*requestpb.Request)(nil),      // 39: requestpb.Request
	(*commonpb.HashData)(nil),      // 40: commonpb.HashData
	(*contextstorepb.Origin)(nil),  // 41: contextstorepb.Origin
	(*isspb.ISSHashOrigin)(nil),    // 42: isspb.ISSHashOrigin
	(*dslpb.Origin)(nil),           // 43: dslpb.Origin
	(*isspb.ISSSignOrigin)(nil),    // 44: isspb.ISSSignOrigin
	(*isspb.ISSSigVerOrigin)(nil),  // 45: isspb.ISSSigVerOrigin
	(*messagepb.Message)(nil),      // 46: messagepb.Message
	(*requestpb.Batch)(nil),        // 47: requestpb.Batch
}
var file_eventpb_eventpb_proto_depIdxs = []int32{
	1,  // 0: eventpb.Event.init:type_name -> eventpb.Init
	2,  // 1: eventpb.Event.tick:type_name -> eventpb.Tick
	17, // 2: eventpb.Event.wal_append:type_name -> eventpb.WALAppend
	18, // 3: eventpb.Event.wal_entry:type_name -> eventpb.WALEntry
	19, // 4: eventpb.Event.wal_truncate:type_name -> eventpb.WALTruncate
	3,  // 5: eventpb.Event.new_requests:type_name -> eventpb.NewRequests
	4,  // 6: eventpb.Event.hash_request:type_name -> eventpb.HashRequest
	5,  // 7: eventpb.Event.hash_result:type_name -> eventpb.HashResult
	7,  // 8: eventpb.Event.sign_request:type_name -> eventpb.SignRequest
	8,  // 9: eventpb.Event.sign_result:type_name -> eventpb.SignResult
	11, // 10: eventpb.Event.verify_node_sigs:type_name -> eventpb.VerifyNodeSigs
	12, // 11: eventpb.Event.node_sigs_verified:type_name -> eventpb.NodeSigsVerified
	14, // 12: eventpb.Event.request_ready:type_name -> eventpb.RequestReady
	15, // 13: eventpb.Event.send_message:type_name -> eventpb.SendMessage
	16, // 14: eventpb.Event.message_received:type_name -> eventpb.MessageReceived
	21, // 15: eventpb.Event.deliver:type_name -> eventpb.Deliver
	32, // 16: eventpb.Event.iss:type_name -> isspb.ISSEvent
	22, // 17: eventpb.Event.verify_request_sig:type_name -> eventpb.VerifyRequestSig
	23, // 18: eventpb.Event.request_sig_verified:type_name -> eventpb.RequestSigVerified
	24, // 19: eventpb.Event.store_verified_request:type_name -> eventpb.StoreVerifiedRequest
	25, // 20: eventpb.Event.state_snapshot_request:type_name -> eventpb.StateSnapshotRequest
	33, // 21: eventpb.Event.state_snapshot:type_name -> commonpb.StateSnapshot
	26, // 22: eventpb.Event.app_restore_state:type_name -> eventpb.AppRestoreState
	27, // 23: eventpb.Event.timer_delay:type_name -> eventpb.TimerDelay
	28, // 24: eventpb.Event.timer_repeat:type_name -> eventpb.TimerRepeat
	29, // 25: eventpb.Event.timer_garbage_collect:type_name -> eventpb.TimerGarbageCollect
	34, // 26: eventpb.Event.bcb:type_name -> bcbpb.Event
	35, // 27: eventpb.Event.mempool:type_name -> mempoolpb.Event
	36, // 28: eventpb.Event.availability:type_name -> availabilitypb.Event
	30, // 29: eventpb.Event.new_epoch:type_name -> eventpb.NewEpoch
	31, // 30: eventpb.Event.new_config:type_name -> eventpb.NewConfig
	37, // 31: eventpb.Event.testingString:type_name -> google.protobuf.StringValue
	38, // 32: eventpb.Event.testingUint:type_name -> google.protobuf.UInt64Value
	0,  // 33: eventpb.Event.next:type_name -> eventpb.Event
	39, // 34: eventpb.NewRequests.requests:type_name -> requestpb.Request
	40, // 35: eventpb.HashRequest.data:type_name -> commonpb.HashData
	6,  // 36: eventpb.HashRequest.origin:type_name -> eventpb.HashOrigin
	6,  // 37: eventpb.HashResult.origin:type_name -> eventpb.HashOrigin
	41, // 38: eventpb.HashOrigin.context_store:type_name -> contextstorepb.Origin
	39, // 39: eventpb.HashOrigin.request:type_name -> requestpb.Request
	42, // 40: eventpb.HashOrigin.iss:type_name -> isspb.ISSHashOrigin
	43, // 41: eventpb.HashOrigin.dsl:type_name -> dslpb.Origin
	9,  // 42: eventpb.SignRequest.origin:type_name -> eventpb.SignOrigin
	9,  // 43: eventpb.SignResult.origin:type_name -> eventpb.SignOrigin
	41, // 44: eventpb.SignOrigin.context_store:type_name -> contextstorepb.Origin
	44, // 45: eventpb.SignOrigin.iss:type_name -> isspb.ISSSignOrigin
	43, // 46: eventpb.SignOrigin.dsl:type_name -> dslpb.Origin
	10, // 47: eventpb.VerifyNodeSigs.data:type_name -> eventpb.SigVerData
	13, // 48: eventpb.VerifyNodeSigs.origin:type_name -> eventpb.SigVerOrigin
	13, // 49: eventpb.NodeSigsVerified.origin:type_name -> eventpb.SigVerOrigin
	41, // 50: eventpb.SigVerOrigin.context_store:type_name -> contextstorepb.Origin
	45, // 51: eventpb.SigVerOrigin.iss:type_name -> isspb.ISSSigVerOrigin
	43, // 52: eventpb.SigVerOrigin.dsl:type_name -> dslpb.Origin
	39, // 53: eventpb.RequestReady.request:type_name -> requestpb.Request
	46, // 54: eventpb.SendMessage.msg:type_name -> messagepb.Message
	46, // 55: eventpb.MessageReceived.msg:type_name -> messagepb.Message
	0,  // 56: eventpb.WALAppend.event:type_name -> eventpb.Event
	0,  // 57: eventpb.WALEntry.event:type_name -> eventpb.Event
	47, // 58: eventpb.Deliver.batch:type_name -> requestpb.Batch
	39, // 59: eventpb.VerifyRequestSig.request:type_name -> requestpb.Request
	39, // 60: eventpb.RequestSigVerified.request:type_name -> requestpb.Request
	39, // 61: eventpb.StoreVerifiedRequest.request:type_name -> requestpb.Request
	33, // 62: eventpb.AppRestoreState.snapshot:type_name -> commonpb.StateSnapshot
	0,  // 63: eventpb.TimerDelay.events:type_name -> eventpb.Event
	0,  // 64: eventpb.TimerRepeat.events:type_name -> eventpb.Event
	65, // [65:65] is the sub-list for method output_type
	65, // [65:65] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_eventpb_eventpb_proto_init() }
func file_eventpb_eventpb_proto_init() {
	if File_eventpb_eventpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eventpb_eventpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Init); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigVerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyNodeSigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSigsVerified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigVerOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WALAppend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WALEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WALTruncate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WALLoadAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deliver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRequestSig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSigVerified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreVerifiedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRestoreState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerDelay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerRepeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerGarbageCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventpb_eventpb_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eventpb_eventpb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_Init)(nil),
		(*Event_Tick)(nil),
		(*Event_WalAppend)(nil),
		(*Event_WalEntry)(nil),
		(*Event_WalTruncate)(nil),
		(*Event_NewRequests)(nil),
		(*Event_HashRequest)(nil),
		(*Event_HashResult)(nil),
		(*Event_SignRequest)(nil),
		(*Event_SignResult)(nil),
		(*Event_VerifyNodeSigs)(nil),
		(*Event_NodeSigsVerified)(nil),
		(*Event_RequestReady)(nil),
		(*Event_SendMessage)(nil),
		(*Event_MessageReceived)(nil),
		(*Event_Deliver)(nil),
		(*Event_Iss)(nil),
		(*Event_VerifyRequestSig)(nil),
		(*Event_RequestSigVerified)(nil),
		(*Event_StoreVerifiedRequest)(nil),
		(*Event_StateSnapshotRequest)(nil),
		(*Event_StateSnapshot)(nil),
		(*Event_AppRestoreState)(nil),
		(*Event_TimerDelay)(nil),
		(*Event_TimerRepeat)(nil),
		(*Event_TimerGarbageCollect)(nil),
		(*Event_Bcb)(nil),
		(*Event_Mempool)(nil),
		(*Event_Availability)(nil),
		(*Event_NewEpoch)(nil),
		(*Event_NewConfig)(nil),
		(*Event_TestingString)(nil),
		(*Event_TestingUint)(nil),
	}
	file_eventpb_eventpb_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*HashOrigin_ContextStore)(nil),
		(*HashOrigin_Request)(nil),
		(*HashOrigin_Iss)(nil),
		(*HashOrigin_Dsl)(nil),
	}
	file_eventpb_eventpb_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*SignOrigin_ContextStore)(nil),
		(*SignOrigin_Iss)(nil),
		(*SignOrigin_Dsl)(nil),
	}
	file_eventpb_eventpb_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SigVerOrigin_ContextStore)(nil),
		(*SigVerOrigin_Iss)(nil),
		(*SigVerOrigin_Dsl)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eventpb_eventpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eventpb_eventpb_proto_goTypes,
		DependencyIndexes: file_eventpb_eventpb_proto_depIdxs,
		MessageInfos:      file_eventpb_eventpb_proto_msgTypes,
	}.Build()
	File_eventpb_eventpb_proto = out.File
	file_eventpb_eventpb_proto_rawDesc = nil
	file_eventpb_eventpb_proto_goTypes = nil
	file_eventpb_eventpb_proto_depIdxs = nil
}
