// Code generated by Mir codegen. DO NOT EDIT.

package availabilitypbevents

import (
	types "github.com/filecoin-project/mir/pkg/pb/availabilitypb/types"
	types1 "github.com/filecoin-project/mir/pkg/pb/eventpb/types"
	types2 "github.com/filecoin-project/mir/pkg/pb/trantorpb/types"
	stdtypes "github.com/filecoin-project/mir/stdtypes"
)

func RequestCert(destModule stdtypes.ModuleID, origin *types.RequestCertOrigin) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Availability{
			Availability: &types.Event{
				Type: &types.Event_RequestCert{
					RequestCert: &types.RequestCert{
						Origin: origin,
					},
				},
			},
		},
	}
}

func NewCert(destModule stdtypes.ModuleID, cert *types.Cert, origin *types.RequestCertOrigin) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Availability{
			Availability: &types.Event{
				Type: &types.Event_NewCert{
					NewCert: &types.NewCert{
						Cert:   cert,
						Origin: origin,
					},
				},
			},
		},
	}
}

func VerifyCert(destModule stdtypes.ModuleID, cert *types.Cert, origin *types.VerifyCertOrigin) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Availability{
			Availability: &types.Event{
				Type: &types.Event_VerifyCert{
					VerifyCert: &types.VerifyCert{
						Cert:   cert,
						Origin: origin,
					},
				},
			},
		},
	}
}

func CertVerified(destModule stdtypes.ModuleID, valid bool, err string, origin *types.VerifyCertOrigin) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Availability{
			Availability: &types.Event{
				Type: &types.Event_CertVerified{
					CertVerified: &types.CertVerified{
						Valid:  valid,
						Err:    err,
						Origin: origin,
					},
				},
			},
		},
	}
}

func RequestTransactions(destModule stdtypes.ModuleID, cert *types.Cert, origin *types.RequestTransactionsOrigin) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Availability{
			Availability: &types.Event{
				Type: &types.Event_RequestTransactions{
					RequestTransactions: &types.RequestTransactions{
						Cert:   cert,
						Origin: origin,
					},
				},
			},
		},
	}
}

func ProvideTransactions(destModule stdtypes.ModuleID, txs []*types2.Transaction, origin *types.RequestTransactionsOrigin) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Availability{
			Availability: &types.Event{
				Type: &types.Event_ProvideTransactions{
					ProvideTransactions: &types.ProvideTransactions{
						Txs:    txs,
						Origin: origin,
					},
				},
			},
		},
	}
}

func ComputeCert(destModule stdtypes.ModuleID) *types1.Event {
	return &types1.Event{
		DestModule: destModule,
		Type: &types1.Event_Availability{
			Availability: &types.Event{
				Type: &types.Event_ComputeCert{
					ComputeCert: &types.ComputeCert{},
				},
			},
		},
	}
}
