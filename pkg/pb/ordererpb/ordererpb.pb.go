// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: ordererpb/ordererpb.proto

package ordererpb

import (
	availabilitypb "github.com/filecoin-project/mir/pkg/pb/availabilitypb"
	commonpb "github.com/filecoin-project/mir/pkg/pb/commonpb"
	_ "github.com/filecoin-project/mir/pkg/pb/mir"
	_ "github.com/filecoin-project/mir/pkg/pb/net"
	pbftpb "github.com/filecoin-project/mir/pkg/pb/pbftpb"
	requestpb "github.com/filecoin-project/mir/pkg/pb/requestpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Event_Init
	//	*Event_Deliver
	//	*Event_MessageReceived
	//	*Event_PendingRequests
	//	*Event_CertRequest
	//	*Event_BatchReady
	//	*Event_CertReady
	//	*Event_Pbft
	Type isEvent_Type `protobuf_oneof:"type"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{0}
}

func (m *Event) GetType() isEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Event) GetInit() *SBInit {
	if x, ok := x.GetType().(*Event_Init); ok {
		return x.Init
	}
	return nil
}

func (x *Event) GetDeliver() *SBDeliver {
	if x, ok := x.GetType().(*Event_Deliver); ok {
		return x.Deliver
	}
	return nil
}

func (x *Event) GetMessageReceived() *SBMessageReceived {
	if x, ok := x.GetType().(*Event_MessageReceived); ok {
		return x.MessageReceived
	}
	return nil
}

func (x *Event) GetPendingRequests() *SBPendingRequests {
	if x, ok := x.GetType().(*Event_PendingRequests); ok {
		return x.PendingRequests
	}
	return nil
}

func (x *Event) GetCertRequest() *SBCertRequest {
	if x, ok := x.GetType().(*Event_CertRequest); ok {
		return x.CertRequest
	}
	return nil
}

func (x *Event) GetBatchReady() *SBBatchReady {
	if x, ok := x.GetType().(*Event_BatchReady); ok {
		return x.BatchReady
	}
	return nil
}

func (x *Event) GetCertReady() *SBCertReady {
	if x, ok := x.GetType().(*Event_CertReady); ok {
		return x.CertReady
	}
	return nil
}

func (x *Event) GetPbft() *pbftpb.Event {
	if x, ok := x.GetType().(*Event_Pbft); ok {
		return x.Pbft
	}
	return nil
}

type isEvent_Type interface {
	isEvent_Type()
}

type Event_Init struct {
	Init *SBInit `protobuf:"bytes,1,opt,name=init,proto3,oneof"`
}

type Event_Deliver struct {
	Deliver *SBDeliver `protobuf:"bytes,2,opt,name=deliver,proto3,oneof"`
}

type Event_MessageReceived struct {
	MessageReceived *SBMessageReceived `protobuf:"bytes,3,opt,name=message_received,json=messageReceived,proto3,oneof"`
}

type Event_PendingRequests struct {
	PendingRequests *SBPendingRequests `protobuf:"bytes,4,opt,name=pending_requests,json=pendingRequests,proto3,oneof"`
}

type Event_CertRequest struct {
	CertRequest *SBCertRequest `protobuf:"bytes,6,opt,name=cert_request,json=certRequest,proto3,oneof"`
}

type Event_BatchReady struct {
	BatchReady *SBBatchReady `protobuf:"bytes,7,opt,name=batch_ready,json=batchReady,proto3,oneof"`
}

type Event_CertReady struct {
	CertReady *SBCertReady `protobuf:"bytes,8,opt,name=cert_ready,json=certReady,proto3,oneof"`
}

type Event_Pbft struct {
	Pbft *pbftpb.Event `protobuf:"bytes,14,opt,name=pbft,proto3,oneof"`
}

func (*Event_Init) isEvent_Type() {}

func (*Event_Deliver) isEvent_Type() {}

func (*Event_MessageReceived) isEvent_Type() {}

func (*Event_PendingRequests) isEvent_Type() {}

func (*Event_CertRequest) isEvent_Type() {}

func (*Event_BatchReady) isEvent_Type() {}

func (*Event_CertReady) isEvent_Type() {}

func (*Event_Pbft) isEvent_Type() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Message_Pbft
	Type isMessage_Type `protobuf_oneof:"type"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{1}
}

func (m *Message) GetType() isMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Message) GetPbft() *pbftpb.Message {
	if x, ok := x.GetType().(*Message_Pbft); ok {
		return x.Pbft
	}
	return nil
}

type isMessage_Type interface {
	isMessage_Type()
}

type Message_Pbft struct {
	Pbft *pbftpb.Message `protobuf:"bytes,1,opt,name=pbft,proto3,oneof"`
}

func (*Message_Pbft) isMessage_Type() {}

type SBInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SBInit) Reset() {
	*x = SBInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBInit) ProtoMessage() {}

func (x *SBInit) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBInit.ProtoReflect.Descriptor instead.
func (*SBInit) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{2}
}

type SBCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SBCertRequest) Reset() {
	*x = SBCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBCertRequest) ProtoMessage() {}

func (x *SBCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBCertRequest.ProtoReflect.Descriptor instead.
func (*SBCertRequest) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{3}
}

type SBBatchReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batch               *requestpb.Batch `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	PendingRequestsLeft uint64           `protobuf:"varint,2,opt,name=pending_requests_left,json=pendingRequestsLeft,proto3" json:"pending_requests_left,omitempty"`
}

func (x *SBBatchReady) Reset() {
	*x = SBBatchReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBBatchReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBBatchReady) ProtoMessage() {}

func (x *SBBatchReady) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBBatchReady.ProtoReflect.Descriptor instead.
func (*SBBatchReady) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{4}
}

func (x *SBBatchReady) GetBatch() *requestpb.Batch {
	if x != nil {
		return x.Batch
	}
	return nil
}

func (x *SBBatchReady) GetPendingRequestsLeft() uint64 {
	if x != nil {
		return x.PendingRequestsLeft
	}
	return 0
}

type SBCertReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert *availabilitypb.Cert `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
}

func (x *SBCertReady) Reset() {
	*x = SBCertReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBCertReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBCertReady) ProtoMessage() {}

func (x *SBCertReady) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBCertReady.ProtoReflect.Descriptor instead.
func (*SBCertReady) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{5}
}

func (x *SBCertReady) GetCert() *availabilitypb.Cert {
	if x != nil {
		return x.Cert
	}
	return nil
}

type SBDeliver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn       uint64 `protobuf:"varint,1,opt,name=sn,proto3" json:"sn,omitempty"`
	CertData []byte `protobuf:"bytes,2,opt,name=cert_data,json=certData,proto3" json:"cert_data,omitempty"`
	Aborted  bool   `protobuf:"varint,3,opt,name=aborted,proto3" json:"aborted,omitempty"`
}

func (x *SBDeliver) Reset() {
	*x = SBDeliver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBDeliver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBDeliver) ProtoMessage() {}

func (x *SBDeliver) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBDeliver.ProtoReflect.Descriptor instead.
func (*SBDeliver) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{6}
}

func (x *SBDeliver) GetSn() uint64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

func (x *SBDeliver) GetCertData() []byte {
	if x != nil {
		return x.CertData
	}
	return nil
}

func (x *SBDeliver) GetAborted() bool {
	if x != nil {
		return x.Aborted
	}
	return false
}

type SBMessageReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Msg  *Message `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SBMessageReceived) Reset() {
	*x = SBMessageReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBMessageReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBMessageReceived) ProtoMessage() {}

func (x *SBMessageReceived) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBMessageReceived.ProtoReflect.Descriptor instead.
func (*SBMessageReceived) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{7}
}

func (x *SBMessageReceived) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SBMessageReceived) GetMsg() *Message {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SBPendingRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumRequests uint64 `protobuf:"varint,1,opt,name=numRequests,proto3" json:"numRequests,omitempty"`
}

func (x *SBPendingRequests) Reset() {
	*x = SBPendingRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBPendingRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBPendingRequests) ProtoMessage() {}

func (x *SBPendingRequests) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBPendingRequests.ProtoReflect.Descriptor instead.
func (*SBPendingRequests) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{8}
}

func (x *SBPendingRequests) GetNumRequests() uint64 {
	if x != nil {
		return x.NumRequests
	}
	return 0
}

type HashOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch    uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Instance uint64 `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	// Types that are assignable to Type:
	//	*HashOrigin_Pbft
	Type isHashOrigin_Type `protobuf_oneof:"type"`
}

func (x *HashOrigin) Reset() {
	*x = HashOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashOrigin) ProtoMessage() {}

func (x *HashOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashOrigin.ProtoReflect.Descriptor instead.
func (*HashOrigin) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{9}
}

func (x *HashOrigin) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *HashOrigin) GetInstance() uint64 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (m *HashOrigin) GetType() isHashOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *HashOrigin) GetPbft() *pbftpb.HashOrigin {
	if x, ok := x.GetType().(*HashOrigin_Pbft); ok {
		return x.Pbft
	}
	return nil
}

type isHashOrigin_Type interface {
	isHashOrigin_Type()
}

type HashOrigin_Pbft struct {
	Pbft *pbftpb.HashOrigin `protobuf:"bytes,3,opt,name=pbft,proto3,oneof"`
}

func (*HashOrigin_Pbft) isHashOrigin_Type() {}

type SignOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch    uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Instance uint64 `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	// Types that are assignable to Type:
	//	*SignOrigin_Pbft
	Type isSignOrigin_Type `protobuf_oneof:"type"`
}

func (x *SignOrigin) Reset() {
	*x = SignOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOrigin) ProtoMessage() {}

func (x *SignOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOrigin.ProtoReflect.Descriptor instead.
func (*SignOrigin) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{10}
}

func (x *SignOrigin) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *SignOrigin) GetInstance() uint64 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (m *SignOrigin) GetType() isSignOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SignOrigin) GetPbft() *pbftpb.SignOrigin {
	if x, ok := x.GetType().(*SignOrigin_Pbft); ok {
		return x.Pbft
	}
	return nil
}

type isSignOrigin_Type interface {
	isSignOrigin_Type()
}

type SignOrigin_Pbft struct {
	Pbft *pbftpb.SignOrigin `protobuf:"bytes,3,opt,name=pbft,proto3,oneof"`
}

func (*SignOrigin_Pbft) isSignOrigin_Type() {}

type SigVerOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch    uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Instance uint64 `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	// Types that are assignable to Type:
	//	*SigVerOrigin_Pbft
	Type isSigVerOrigin_Type `protobuf_oneof:"type"`
}

func (x *SigVerOrigin) Reset() {
	*x = SigVerOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigVerOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigVerOrigin) ProtoMessage() {}

func (x *SigVerOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigVerOrigin.ProtoReflect.Descriptor instead.
func (*SigVerOrigin) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{11}
}

func (x *SigVerOrigin) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *SigVerOrigin) GetInstance() uint64 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (m *SigVerOrigin) GetType() isSigVerOrigin_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SigVerOrigin) GetPbft() *pbftpb.SigVerOrigin {
	if x, ok := x.GetType().(*SigVerOrigin_Pbft); ok {
		return x.Pbft
	}
	return nil
}

type isSigVerOrigin_Type interface {
	isSigVerOrigin_Type()
}

type SigVerOrigin_Pbft struct {
	Pbft *pbftpb.SigVerOrigin `protobuf:"bytes,3,opt,name=pbft,proto3,oneof"`
}

func (*SigVerOrigin_Pbft) isSigVerOrigin_Type() {}

type PBFTSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leader     string               `protobuf:"bytes,1,opt,name=leader,proto3" json:"leader,omitempty"`
	Membership *commonpb.Membership `protobuf:"bytes,2,opt,name=membership,proto3" json:"membership,omitempty"`
	Proposals  map[uint64][]byte    `protobuf:"bytes,3,rep,name=proposals,proto3" json:"proposals,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PBFTSegment) Reset() {
	*x = PBFTSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBFTSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBFTSegment) ProtoMessage() {}

func (x *PBFTSegment) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBFTSegment.ProtoReflect.Descriptor instead.
func (*PBFTSegment) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{12}
}

func (x *PBFTSegment) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *PBFTSegment) GetMembership() *commonpb.Membership {
	if x != nil {
		return x.Membership
	}
	return nil
}

func (x *PBFTSegment) GetProposals() map[uint64][]byte {
	if x != nil {
		return x.Proposals
	}
	return nil
}

type PBFTModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Segment         *PBFTSegment `protobuf:"bytes,1,opt,name=segment,proto3" json:"segment,omitempty"`
	AvailabilityId  string       `protobuf:"bytes,2,opt,name=availability_id,json=availabilityId,proto3" json:"availability_id,omitempty"`
	Epoch           uint64       `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`
	ValidityChecker uint64       `protobuf:"varint,4,opt,name=validity_checker,json=validityChecker,proto3" json:"validity_checker,omitempty"`
}

func (x *PBFTModule) Reset() {
	*x = PBFTModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ordererpb_ordererpb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBFTModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBFTModule) ProtoMessage() {}

func (x *PBFTModule) ProtoReflect() protoreflect.Message {
	mi := &file_ordererpb_ordererpb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBFTModule.ProtoReflect.Descriptor instead.
func (*PBFTModule) Descriptor() ([]byte, []int) {
	return file_ordererpb_ordererpb_proto_rawDescGZIP(), []int{13}
}

func (x *PBFTModule) GetSegment() *PBFTSegment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *PBFTModule) GetAvailabilityId() string {
	if x != nil {
		return x.AvailabilityId
	}
	return ""
}

func (x *PBFTModule) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *PBFTModule) GetValidityChecker() uint64 {
	if x != nil {
		return x.ValidityChecker
	}
	return 0
}

var File_ordererpb_ordererpb_proto protoreflect.FileDescriptor

var file_ordererpb_ordererpb_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x1a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x69, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65,
	0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x6e, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd9, 0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x42, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69,
	0x6e, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x70, 0x62,
	0x2e, 0x53, 0x42, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x42, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x49, 0x0a, 0x10, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x42, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x42,
	0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x42, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x42, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x48, 0x00, 0x52, 0x09, 0x63, 0x65, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x23, 0x0a, 0x04, 0x70, 0x62, 0x66, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x70, 0x62, 0x66, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x62, 0x66, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x04, 0x70, 0x62, 0x66, 0x74, 0x3a, 0x04,
	0xc8, 0xe4, 0x1d, 0x01, 0x42, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x04, 0xc8, 0xe4,
	0x1d, 0x01, 0x22, 0x08, 0x0a, 0x06, 0x53, 0x42, 0x49, 0x6e, 0x69, 0x74, 0x22, 0x0f, 0x0a, 0x0d,
	0x53, 0x42, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6a, 0x0a,
	0x0c, 0x53, 0x42, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x26, 0x0a,
	0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x22, 0x37, 0x0a, 0x0b, 0x53, 0x42, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x70, 0x62, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x04, 0x63, 0x65,
	0x72, 0x74, 0x22, 0x52, 0x0a, 0x09, 0x53, 0x42, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x73, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61,
	0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x11, 0x53, 0x42, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x24, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x35, 0x0a, 0x11, 0x53, 0x42, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x70, 0x0a, 0x0a,
	0x48, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x70, 0x62, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x66,
	0x74, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00,
	0x52, 0x04, 0x70, 0x62, 0x66, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x70,
	0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x70, 0x62, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x48, 0x00, 0x52, 0x04, 0x70, 0x62, 0x66, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x74, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x62, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x66, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x56, 0x65, 0x72,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x70, 0x62, 0x66, 0x74, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x0b, 0x50, 0x42, 0x46, 0x54, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x12, 0x43, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65,
	0x72, 0x70, 0x62, 0x2e, 0x50, 0x42, 0x46, 0x54, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x22, 0xae, 0x01,
	0x0a, 0x0a, 0x50, 0x42, 0x46, 0x54, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x07,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x50, 0x42, 0x46, 0x54, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x29, 0x0a,
	0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x3a, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x42, 0x32,
	0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x63, 0x6f, 0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6d, 0x69,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ordererpb_ordererpb_proto_rawDescOnce sync.Once
	file_ordererpb_ordererpb_proto_rawDescData = file_ordererpb_ordererpb_proto_rawDesc
)

func file_ordererpb_ordererpb_proto_rawDescGZIP() []byte {
	file_ordererpb_ordererpb_proto_rawDescOnce.Do(func() {
		file_ordererpb_ordererpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_ordererpb_ordererpb_proto_rawDescData)
	})
	return file_ordererpb_ordererpb_proto_rawDescData
}

var file_ordererpb_ordererpb_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_ordererpb_ordererpb_proto_goTypes = []interface{}{
	(*Event)(nil),               // 0: ordererpb.Event
	(*Message)(nil),             // 1: ordererpb.Message
	(*SBInit)(nil),              // 2: ordererpb.SBInit
	(*SBCertRequest)(nil),       // 3: ordererpb.SBCertRequest
	(*SBBatchReady)(nil),        // 4: ordererpb.SBBatchReady
	(*SBCertReady)(nil),         // 5: ordererpb.SBCertReady
	(*SBDeliver)(nil),           // 6: ordererpb.SBDeliver
	(*SBMessageReceived)(nil),   // 7: ordererpb.SBMessageReceived
	(*SBPendingRequests)(nil),   // 8: ordererpb.SBPendingRequests
	(*HashOrigin)(nil),          // 9: ordererpb.HashOrigin
	(*SignOrigin)(nil),          // 10: ordererpb.SignOrigin
	(*SigVerOrigin)(nil),        // 11: ordererpb.SigVerOrigin
	(*PBFTSegment)(nil),         // 12: ordererpb.PBFTSegment
	(*PBFTModule)(nil),          // 13: ordererpb.PBFTModule
	nil,                         // 14: ordererpb.PBFTSegment.ProposalsEntry
	(*pbftpb.Event)(nil),        // 15: pbftpb.Event
	(*pbftpb.Message)(nil),      // 16: pbftpb.Message
	(*requestpb.Batch)(nil),     // 17: requestpb.Batch
	(*availabilitypb.Cert)(nil), // 18: availabilitypb.Cert
	(*pbftpb.HashOrigin)(nil),   // 19: pbftpb.HashOrigin
	(*pbftpb.SignOrigin)(nil),   // 20: pbftpb.SignOrigin
	(*pbftpb.SigVerOrigin)(nil), // 21: pbftpb.SigVerOrigin
	(*commonpb.Membership)(nil), // 22: commonpb.Membership
}
var file_ordererpb_ordererpb_proto_depIdxs = []int32{
	2,  // 0: ordererpb.Event.init:type_name -> ordererpb.SBInit
	6,  // 1: ordererpb.Event.deliver:type_name -> ordererpb.SBDeliver
	7,  // 2: ordererpb.Event.message_received:type_name -> ordererpb.SBMessageReceived
	8,  // 3: ordererpb.Event.pending_requests:type_name -> ordererpb.SBPendingRequests
	3,  // 4: ordererpb.Event.cert_request:type_name -> ordererpb.SBCertRequest
	4,  // 5: ordererpb.Event.batch_ready:type_name -> ordererpb.SBBatchReady
	5,  // 6: ordererpb.Event.cert_ready:type_name -> ordererpb.SBCertReady
	15, // 7: ordererpb.Event.pbft:type_name -> pbftpb.Event
	16, // 8: ordererpb.Message.pbft:type_name -> pbftpb.Message
	17, // 9: ordererpb.SBBatchReady.batch:type_name -> requestpb.Batch
	18, // 10: ordererpb.SBCertReady.cert:type_name -> availabilitypb.Cert
	1,  // 11: ordererpb.SBMessageReceived.msg:type_name -> ordererpb.Message
	19, // 12: ordererpb.HashOrigin.pbft:type_name -> pbftpb.HashOrigin
	20, // 13: ordererpb.SignOrigin.pbft:type_name -> pbftpb.SignOrigin
	21, // 14: ordererpb.SigVerOrigin.pbft:type_name -> pbftpb.SigVerOrigin
	22, // 15: ordererpb.PBFTSegment.membership:type_name -> commonpb.Membership
	14, // 16: ordererpb.PBFTSegment.proposals:type_name -> ordererpb.PBFTSegment.ProposalsEntry
	12, // 17: ordererpb.PBFTModule.segment:type_name -> ordererpb.PBFTSegment
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_ordererpb_ordererpb_proto_init() }
func file_ordererpb_ordererpb_proto_init() {
	if File_ordererpb_ordererpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ordererpb_ordererpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBBatchReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBCertReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBDeliver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBMessageReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBPendingRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigVerOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBFTSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ordererpb_ordererpb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBFTModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ordererpb_ordererpb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_Init)(nil),
		(*Event_Deliver)(nil),
		(*Event_MessageReceived)(nil),
		(*Event_PendingRequests)(nil),
		(*Event_CertRequest)(nil),
		(*Event_BatchReady)(nil),
		(*Event_CertReady)(nil),
		(*Event_Pbft)(nil),
	}
	file_ordererpb_ordererpb_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Message_Pbft)(nil),
	}
	file_ordererpb_ordererpb_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*HashOrigin_Pbft)(nil),
	}
	file_ordererpb_ordererpb_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*SignOrigin_Pbft)(nil),
	}
	file_ordererpb_ordererpb_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SigVerOrigin_Pbft)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ordererpb_ordererpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ordererpb_ordererpb_proto_goTypes,
		DependencyIndexes: file_ordererpb_ordererpb_proto_depIdxs,
		MessageInfos:      file_ordererpb_ordererpb_proto_msgTypes,
	}.Build()
	File_ordererpb_ordererpb_proto = out.File
	file_ordererpb_ordererpb_proto_rawDesc = nil
	file_ordererpb_ordererpb_proto_goTypes = nil
	file_ordererpb_ordererpb_proto_depIdxs = nil
}
