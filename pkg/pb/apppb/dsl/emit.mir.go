// Code generated by Mir codegen. DO NOT EDIT.

package apppbdsl

import (
	dsl "github.com/filecoin-project/mir/pkg/dsl"
	events "github.com/filecoin-project/mir/pkg/pb/apppb/events"
	types "github.com/filecoin-project/mir/pkg/pb/checkpointpb/types"
	types1 "github.com/filecoin-project/mir/pkg/trantor/types"
	stdtypes "github.com/filecoin-project/mir/stdtypes"
)

// Module-specific dsl functions for emitting events.

func SnapshotRequest(m dsl.Module, destModule stdtypes.ModuleID, replyTo stdtypes.ModuleID) {
	dsl.EmitMirEvent(m, events.SnapshotRequest(destModule, replyTo))
}

func Snapshot(m dsl.Module, destModule stdtypes.ModuleID, appData []uint8) {
	dsl.EmitMirEvent(m, events.Snapshot(destModule, appData))
}

func RestoreState(m dsl.Module, destModule stdtypes.ModuleID, checkpoint *types.StableCheckpoint) {
	dsl.EmitMirEvent(m, events.RestoreState(destModule, checkpoint))
}

func NewEpoch(m dsl.Module, destModule stdtypes.ModuleID, epochNr types1.EpochNr, protocolModule stdtypes.ModuleID) {
	dsl.EmitMirEvent(m, events.NewEpoch(destModule, epochNr, protocolModule))
}
