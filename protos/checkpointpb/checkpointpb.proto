syntax = "proto3";

package checkpointpb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/checkpointpb";

import "trantorpb/trantorpb.proto";

import "mir/codegen_extensions.proto";
import "net/codegen_extensions.proto";

// ============================================================
// Messages
// ============================================================

message Message {
  option (net.message_class) = true;

  oneof type {
    option (net.message_type) = true;

    Checkpoint checkpoint = 1;
  }
}

message Checkpoint {
  option (net.message) = true;

  uint64 epoch        = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.EpochNr"];
  uint64 sn           = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  bytes  snapshotHash = 3;
  bytes  signature    = 4;
}

// ============================================================
// Events
// ============================================================

message Event {
  option (mir.event_class) = true;

  oneof type {
    option (mir.event_type) = true;

    trantorpb.EpochConfig epoch_config      = 1;
    StableCheckpoint     stable_checkpoint = 2;
    EpochProgress        epoch_progress    = 3;
  }
}

message StableCheckpoint {
  option (mir.event) = true;
  option (net.message) = true;

  uint64                 sn       = 1  [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  trantorpb.StateSnapshot snapshot = 2;
  map<string, bytes>     cert     = 3 [(mir.key_type) = "github.com/filecoin-project/mir/pkg/types.NodeID"];
}

message EpochProgress {
  option (mir.event) = true;

  string node_id = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.NodeID"];
  uint64 epoch   = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.EpochNr"];
}

message InstanceParams {
  option (mir.struct) = true;

  trantorpb.Membership  membership         = 1;
  uint64               resend_period      = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/timer/types.Duration"];
  bytes                leader_policy_data = 3;
  trantorpb.EpochConfig epoch_config       = 4;
}