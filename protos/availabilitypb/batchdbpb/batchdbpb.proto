syntax = "proto3";

package batchdbpb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/availabilitypb/batchdbpb";

import "contextstorepb/contextstorepb.proto";
import "dslpb/dslpb.proto";
import "trantorpb/trantorpb.proto";

import "mir/codegen_extensions.proto";

// ============================================================
// Events
// ============================================================

message Event {
  option (mir.event_class) = true;

  oneof Type {
    option (mir.event_type) = true;

    LookupBatch         lookup          = 1;
    LookupBatchResponse lookup_response = 2;
    StoreBatch          store           = 3;
    BatchStored         stored          = 4;
    GarbageCollect      garbage_collect = 5;
  }
}

// LookupBatch is used to pull a batch with its metadata from the local batch database.
message LookupBatch {
  option (mir.event) = true;

  bytes             batch_id = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/availability/multisigcollector/types.BatchID"];
  LookupBatchOrigin origin   = 2 [(mir.origin_request) = true];
}

// LookupBatchResponse is a response to a LookupBatch event.
message LookupBatchResponse {
  option (mir.event) = true;

  bool                           found  = 1;
  repeated trantorpb.Transaction txs    = 2;
  LookupBatchOrigin              origin = 3 [(mir.origin_response) = true];
}

// StoreBatch is used to store a new batch in the local batch database.
message StoreBatch {
  option (mir.event) = true;

  bytes                          batch_id        = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/availability/multisigcollector/types.BatchID"];
  repeated trantorpb.Transaction txs             = 2;
  uint64                         retention_index = 3 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.RetentionIndex"];
  StoreBatchOrigin               origin          = 4 [(mir.origin_request) = true];
}

// BatchStored is a response to a VerifyCert event.
message BatchStored {
  option (mir.event) = true;

  StoreBatchOrigin origin = 1 [(mir.origin_response) = true];
}

message GarbageCollect {
  option (mir.event) = true;

  uint64 retention_index = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.RetentionIndex"];
}

// ============================================================
// Data structures
// ============================================================

message LookupBatchOrigin {
  option (mir.event_class) = true;

  string module = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
  oneof Type {
    option (mir.event_type) = true;

    contextstorepb.Origin context_store = 2;
    dslpb.Origin          dsl           = 3;
  }
}

message StoreBatchOrigin {
  option (mir.event_class) = true;

  string module = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
  oneof Type {
    option (mir.event_type) = true;

    contextstorepb.Origin context_store = 2;
    dslpb.Origin          dsl           = 3;
  }
}
