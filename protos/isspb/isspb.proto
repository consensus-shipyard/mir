/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package isspb;

import "commonpb/commonpb.proto";
import "requestpb/requestpb.proto";
import "checkpointpb/checkpointpb.proto";

import "mir/codegen_extensions.proto";
import "net/codegen_extensions.proto";

option go_package = "github.com/filecoin-project/mir/pkg/pb/isspb";

// ============================================================
// Messages
// ============================================================

message ISSMessage {
  option (net.message_class) = true;

  oneof type {
    option (net.message_type) = true;
    checkpointpb.StableCheckpoint   stable_checkpoint   = 3;
    RetransmitRequests              retransmit_requests = 4; // TODO Remove? not being used
  }
}

message RetransmitRequests {
  option (net.message) = true;

  repeated requestpb.Request requests = 1;
}

// ============================================================
// Events
// ============================================================

message ISSEvent {
  option (mir.event_class) = true;
  oneof type {
    option (mir.event_type) = true;
    PersistCheckpoint       persist_checkpoint        = 1;
    PersistStableCheckpoint persist_stable_checkpoint = 3;
    PushCheckpoint          push_checkpoint           = 5;
    SBDeliver sb_deliver = 6;
  }
}

message ISSHashOrigin { // TODO Remove? not being used
  oneof type {
    uint64            log_entry_sn         = 2;
    uint64            state_snapshot_epoch = 3;
    RequestHashOrigin requests             = 4;
  }
}

message RequestHashOrigin { // TODO Remove? not being used
  repeated requestpb.Request requests = 1;
}

message ISSSigVerOrigin { // TODO Remove? not being used
  oneof type {
    uint64                        checkpoint_epoch  = 2;
    checkpointpb.StableCheckpoint stable_checkpoint = 3;
  }
}

message PersistCheckpoint { // TODO Remove? not being used
  uint64                 sn                  = 1;
  commonpb.StateSnapshot state_snapshot      = 2;
  bytes                  state_snapshot_hash = 3;
  bytes                  signature           = 4;
}

// PersistStableCheckpoint needs to be a separate Event from StableCheckpoint, since both are ISSEvents,
// but, the protocol must differentiate between them. While the former will be applied on recovery from the WAL,
// the latter serves as a notification to the ISS protocol when a stable checkpoint has been persisted.
message PersistStableCheckpoint { // TODO Remove? not being used
  checkpointpb.StableCheckpoint stable_checkpoint = 1;
}

message PushCheckpoint {
  option (mir.event) = true;
}

message SBDeliver {
  option (mir.event) = true;

  uint64 sn          = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.SeqNr"];
  bytes  data        = 2;
  bool   aborted     = 3;
  string leader      = 4 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.NodeID"];
  string instance_id = 5 [(mir.type) = "github.com/filecoin-project/mir/pkg/types.ModuleID"];
}
