syntax = "proto3";

package pbftpb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/pbftpb";

import "mir/codegen_extensions.proto";
import "net/codegen_extensions.proto";

// ============================================================
// Messages
// ============================================================

message Message {
  option (net.message_class) = true;

  oneof type {
    option (net.message_type) = true;

    // Good case messages
    Preprepare        preprepare         = 1;
    Prepare           prepare            = 2;
    Commit            commit             = 3;

    // Segment-level checkpoint messages
    Done              done               = 4;
    CatchUpRequest    catch_up_request   = 5;
    CatchUpResponse   catch_up_response  = 6;

    // View change messages
    SignedViewChange  signed_view_change = 7;
    PreprepareRequest preprepare_request = 8;
    MissingPreprepare missing_preprepare = 9;
    NewView           new_view           = 10;
  }
}

// ============================================================
// Good case messages

message Preprepare {
  option (net.message) = true;

  uint64 sn      = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  uint64 view    = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/orderers/types.ViewNr"];
  bytes  data    = 3;
  bool   aborted = 4;
  bytes  signature = 5; //only used if orderers.common.AccountabilityMode != noAccountability
}

message Prepare {
  option (net.message) = true;

  uint64 sn     = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  uint64 view   = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/orderers/types.ViewNr"];
  bytes  digest = 3;
  bytes  signature = 4; //only used if orderers.common.AccountabilityMode == AllAccountable
}

message Commit {
  option (net.message) = true;

  uint64 sn     = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  uint64 view   = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/orderers/types.ViewNr"];
  bytes  digest = 3;
  Preprepare  preprepare = 4; //only used if orderers.common.AccountabilityMode != noAccountability
}

// ============================================================
// Segment-level checkpoint messages

message Done {
  option (net.message) = true;

  repeated bytes digests = 1;
}

message CatchUpRequest {
  option (net.message) = true;

  bytes  digest = 1;
  uint64 sn     = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
}

message CatchUpResponse {
  option (net.message) = true;

  Preprepare resp = 1;
}

// ============================================================
// View change messages

message SignedViewChange {
  option (net.message) = true;

  ViewChange view_change = 1;
  bytes      signature   = 2;
}

message PreprepareRequest {
  option (net.message) = true;

  bytes  digest = 1;
  uint64 sn     = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
}

message MissingPreprepare {
  option (net.message) = true;

  Preprepare preprepare = 1;
}

message NewView {
  option (net.message) = true;

  uint64                    view                = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/orderers/types.ViewNr"];
  repeated string           view_change_senders = 3;
  repeated SignedViewChange signed_view_changes = 2;
  repeated uint64           preprepare_seq_nrs  = 4 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  repeated Preprepare       preprepares         = 5;
}

// ============================================================
// View change message contents

message ViewChange {
  option (mir.struct) = true;

  uint64             view  = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/orderers/types.ViewNr"];
  repeated PSetEntry p_set = 2;
  repeated QSetEntry q_set = 3;
}

message PSetEntry {
  option (mir.struct) = true;

  uint64 sn     = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  uint64 view   = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/orderers/types.ViewNr"];
  bytes  digest = 3;
}

message QSetEntry {
  option (mir.struct) = true;

  uint64 sn     = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  uint64 view   = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/orderers/types.ViewNr"];
  bytes  digest = 3;
}

// ============================================================
// Events
// ============================================================

message Event {
  option (mir.event_class) = true;

  oneof type {
    option (mir.event_type) = true;
    ProposeTimeout             propose_timeout         = 1;
    pbftpb.ViewChangeSNTimeout view_change_sn_timeout  = 2;
    ViewChangeSegTimeout       view_change_seg_timeout = 3;
  }
}

message ProposeTimeout{
  option (mir.event) = true;
  uint64 propose_timeout = 1;
}

message ViewChangeSNTimeout {
  option (mir.event) = true;
  uint64 view         = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/orderers/types.ViewNr"];
  uint64 numCommitted = 2;
}

message ViewChangeSegTimeout {
  option (mir.event) = true;
  uint64 ViewChangeSegTimeout = 1;
}
