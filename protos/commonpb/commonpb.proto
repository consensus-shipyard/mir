syntax = "proto3";

package commonpb;

option go_package = "github.com/filecoin-project/mir/pkg/pb/commonpb";

import "mir/codegen_extensions.proto";

// TODO: This is an ugly ugly package that was created ad-hoc to avoid circular references.
//   Clean it ups and use a more meaningful package structure that does not need a "common" package.

message HashData {
  option (mir.struct) = true;

  repeated bytes data = 1;
}

message StateSnapshot {
  option (mir.struct) = true;

  bytes     app_data   = 1;
  EpochData epoch_data = 2;
}

message EpochData {
  option (mir.struct) = true;

  EpochConfig    epoch_config        = 1;
  ClientProgress client_progress     = 2;
  bytes          leader_policy       = 3;
  Membership     previous_membership = 4;
}

message EpochConfig {
  option (mir.event) = true;

  uint64              epoch_nr    = 1 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.EpochNr"];
  uint64              first_sn    = 2 [(mir.type) = "github.com/filecoin-project/mir/pkg/trantor/types.SeqNr"];
  uint64              length      = 3;
  repeated Membership memberships = 4;
}

message Membership {
  option (mir.struct) = true;
  map<string, string> membership = 1 [(mir.key_type) = "github.com/filecoin-project/mir/pkg/types.NodeID"]; // value type is Multiaddr, convert in code directly
}

message ClientProgress {
  option (mir.event) = true;

  map<string, DeliveredReqs> progress = 1;
}

message DeliveredReqs {
  option (mir.struct) = true;

  uint64          low_wm    = 1;
  repeated uint64 delivered = 2;
}
